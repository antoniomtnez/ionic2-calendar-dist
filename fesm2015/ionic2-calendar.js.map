{"version":3,"file":"ionic2-calendar.js","sources":["ng://ionic2-calendar/calendar.service.ts","ng://ionic2-calendar/monthview.ts","ng://ionic2-calendar/weekview.ts","ng://ionic2-calendar/dayview.ts","ng://ionic2-calendar/calendar.ts","ng://ionic2-calendar/init-position-scroll.ts","ng://ionic2-calendar/calendar.module.ts","ng://ionic2-calendar/ionic2-calendar.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport {ICalendarComponent, IView, CalendarMode, QueryMode} from './calendar';\r\n\r\n@Injectable()\r\nexport class CalendarService {\r\n    queryMode: QueryMode;\r\n    currentDateChangedFromParent$: Observable<Date>;\r\n    currentDateChangedFromChildren$: Observable<Date>;\r\n    eventSourceChanged$: Observable<void>;\r\n    slideChanged$: Observable<number>;\r\n    slideUpdated$: Observable<void>;\r\n\r\n    private _currentDate: Date;\r\n    private currentDateChangedFromParent = new Subject<Date>();\r\n    private currentDateChangedFromChildren = new Subject<Date>();\r\n    private eventSourceChanged = new Subject<void>();\r\n    private slideChanged = new Subject<number>();\r\n    private slideUpdated = new Subject<void>();\r\n\r\n    constructor() {\r\n        this.currentDateChangedFromParent$ = this.currentDateChangedFromParent.asObservable();\r\n        this.currentDateChangedFromChildren$ = this.currentDateChangedFromChildren.asObservable();\r\n        this.eventSourceChanged$ = this.eventSourceChanged.asObservable();\r\n        this.slideChanged$ = this.slideChanged.asObservable();\r\n        this.slideUpdated$ = this.slideUpdated.asObservable();\r\n    }\r\n\r\n    setCurrentDate(val: Date, fromParent: boolean = false) {\r\n        this._currentDate = new Date(val);\r\n        if (fromParent) {\r\n            this.currentDateChangedFromParent.next(val);\r\n        } else {\r\n            this.currentDateChangedFromChildren.next(val);\r\n        }\r\n    }\r\n\r\n    get currentDate(): Date {\r\n        return this._currentDate;\r\n    }\r\n\r\n    rangeChanged(component: ICalendarComponent) {\r\n        if (this.queryMode === 'local') {\r\n            if (component.eventSource && component.onDataLoaded) {\r\n                component.onDataLoaded();\r\n            }\r\n        } else if (this.queryMode === 'remote') {\r\n            let rangeStart = new Date(component.range.startTime.getTime()),\r\n                rangeEnd = new Date(component.range.endTime.getTime());\r\n\r\n            rangeStart.setHours(0);\r\n            if (rangeStart.getHours() === 23) {\r\n                rangeStart.setTime(rangeStart.getTime() + 3600000);\r\n            }\r\n\r\n            rangeEnd.setHours(0);\r\n            if (rangeEnd.getHours() === 23) {\r\n                rangeEnd.setTime(rangeEnd.getTime() + 3600000);\r\n            }\r\n            component.onRangeChanged.emit({\r\n                startTime: rangeStart,\r\n                endTime: rangeEnd\r\n            });\r\n        }\r\n    }\r\n\r\n    private getStep(mode: CalendarMode): { years: number; months: number; days: number; } {\r\n        switch (mode) {\r\n            case 'month':\r\n                return {\r\n                    years: 0,\r\n                    months: 1,\r\n                    days: 0\r\n                };\r\n            case 'week':\r\n                return {\r\n                    years: 0,\r\n                    months: 0,\r\n                    days: 7\r\n                };\r\n            case 'day':\r\n                return {\r\n                    years: 0,\r\n                    months: 0,\r\n                    days: 1\r\n                };\r\n        }\r\n    }\r\n\r\n    getAdjacentCalendarDate(mode: CalendarMode, direction: number): Date {\r\n        let calculateCalendarDate = this.currentDate;\r\n        const step = this.getStep(mode),\r\n            year = calculateCalendarDate.getFullYear() + direction * step.years,\r\n            month = calculateCalendarDate.getMonth() + direction * step.months,\r\n            date = calculateCalendarDate.getDate() + direction * step.days;\r\n\r\n        calculateCalendarDate = new Date(year, month, date, 12, 0, 0);\r\n\r\n        if (mode === 'month') {\r\n            const firstDayInNextMonth = new Date(year, month + 1, 1, 12, 0, 0);\r\n            if (firstDayInNextMonth.getTime() <= calculateCalendarDate.getTime()) {\r\n                calculateCalendarDate = new Date(firstDayInNextMonth.getTime() - 24 * 60 * 60 * 1000);\r\n            }\r\n        }\r\n        return calculateCalendarDate;\r\n    }\r\n\r\n    getAdjacentViewStartTime(component: ICalendarComponent, direction: number): Date {\r\n        let adjacentCalendarDate = this.getAdjacentCalendarDate(component.mode, direction);\r\n        return component.getRange(adjacentCalendarDate).startTime;\r\n    }\r\n\r\n    populateAdjacentViews(component: ICalendarComponent) {\r\n        let currentViewStartDate: Date,\r\n            currentViewData: IView[],\r\n            toUpdateViewIndex: number,\r\n            currentViewIndex = component.currentViewIndex;\r\n\r\n        if (component.direction === 1) {\r\n            currentViewStartDate = this.getAdjacentViewStartTime(component, 1);\r\n            toUpdateViewIndex = (currentViewIndex + 1) % 3;\r\n            component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\r\n        } else if (component.direction === -1) {\r\n            currentViewStartDate = this.getAdjacentViewStartTime(component, -1);\r\n            toUpdateViewIndex = (currentViewIndex + 2) % 3;\r\n            component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\r\n        } else {\r\n            if (!component.views) {\r\n                currentViewData = [];\r\n                currentViewStartDate = component.range.startTime;\r\n                currentViewData.push(component.getViewData(currentViewStartDate));\r\n                currentViewStartDate = this.getAdjacentViewStartTime(component, 1);\r\n                currentViewData.push(component.getViewData(currentViewStartDate));\r\n                currentViewStartDate = this.getAdjacentViewStartTime(component, -1);\r\n                currentViewData.push(component.getViewData(currentViewStartDate));\r\n                component.views = currentViewData;\r\n            } else {\r\n                currentViewStartDate = component.range.startTime;\r\n                component.views[currentViewIndex] = component.getViewData(currentViewStartDate);\r\n                currentViewStartDate = this.getAdjacentViewStartTime(component, -1);\r\n                toUpdateViewIndex = (currentViewIndex + 2) % 3;\r\n                component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\r\n                currentViewStartDate = this.getAdjacentViewStartTime(component, 1);\r\n                toUpdateViewIndex = (currentViewIndex + 1) % 3;\r\n                component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\r\n            }\r\n        }\r\n    }\r\n\r\n    loadEvents() {\r\n        this.eventSourceChanged.next();\r\n    }\r\n\r\n    slide(direction: number) {\r\n        this.slideChanged.next(direction);\r\n    }\r\n\r\n    update() {\r\n        this.slideUpdated.next();\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    OnChanges,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    TemplateRef,\r\n    OnDestroy,\r\n    AfterViewInit\r\n} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {DatePipe} from '@angular/common';\r\nimport {IonSlides} from '@ionic/angular';\r\n\r\nimport {ICalendarComponent, IEvent, IMonthView, IMonthViewRow, ITimeSelected, IRange, CalendarMode, IDateFormatter} from './calendar';\r\nimport {CalendarService} from './calendar.service';\r\nimport {IMonthViewDisplayEventTemplateContext} from './calendar';\r\n\r\n@Component({\r\n    selector: 'monthview',\r\n    template: `\r\n        <div>\r\n            <ion-slides #monthSlider [options]=\"sliderOptions\" [dir]=\"dir\" (ionSlideDidChange)=\"onSlideChanged()\">\r\n                <ion-slide>\r\n                    <table *ngIf=\"0===currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th *ngFor=\"let dayHeader of views[0].dayHeaders\">\r\n                                <small>{{dayHeader}}</small>\r\n                            </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\r\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\" tappable (click)=\"select(views[0].dates[row*7+col])\"\r\n                                [ngClass]=\"getHighlightClass(views[0].dates[row*7+col])\">\r\n                                <ng-template [ngTemplateOutlet]=\"monthviewDisplayEventTemplate\"\r\n                                             [ngTemplateOutletContext]=\"{view: views[0], row: row, col: col}\">\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <table *ngIf=\"0!==currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\r\n                        <thead>\r\n                        <tr class=\"text-center\">\r\n                            <th *ngFor=\"let dayHeader of views[0].dayHeaders\">\r\n                                <small>{{dayHeader}}</small>\r\n                            </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\r\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\">\r\n                                <ng-template [ngTemplateOutlet]=\"monthviewInactiveDisplayEventTemplate\"\r\n                                             [ngTemplateOutletContext]=\"{view: views[0], row: row, col: col}\">\r\n                                </ng-template>\r\n                            </td>\r\n                        <tr>\r\n                        </tbody>\r\n                    </table>\r\n                </ion-slide>\r\n                <ion-slide>\r\n                    <table *ngIf=\"1===currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th *ngFor=\"let dayHeader of views[1].dayHeaders\">\r\n                                <small>{{dayHeader}}</small>\r\n                            </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\r\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\" tappable (click)=\"select(views[1].dates[row*7+col])\"\r\n                                [ngClass]=\"getHighlightClass(views[1].dates[row*7+col])\">\r\n                                <ng-template [ngTemplateOutlet]=\"monthviewDisplayEventTemplate\"\r\n                                             [ngTemplateOutletContext]=\"{view: views[1], row: row, col: col}\">\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <table *ngIf=\"1!==currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\r\n                        <thead>\r\n                        <tr class=\"text-center\">\r\n                            <th *ngFor=\"let dayHeader of views[1].dayHeaders\">\r\n                                <small>{{dayHeader}}</small>\r\n                            </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\r\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\">\r\n                                <ng-template [ngTemplateOutlet]=\"monthviewInactiveDisplayEventTemplate\"\r\n                                             [ngTemplateOutletContext]=\"{view: views[1], row: row, col: col}\">\r\n                                </ng-template>\r\n                            </td>\r\n                        <tr>\r\n                        </tbody>\r\n                    </table>\r\n                </ion-slide>\r\n                <ion-slide>\r\n                    <table *ngIf=\"2===currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th *ngFor=\"let dayHeader of views[2].dayHeaders\">\r\n                                <small>{{dayHeader}}</small>\r\n                            </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\r\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\" tappable (click)=\"select(views[2].dates[row*7+col])\"\r\n                                [ngClass]=\"getHighlightClass(views[2].dates[row*7+col])\">\r\n                                <ng-template [ngTemplateOutlet]=\"monthviewDisplayEventTemplate\"\r\n                                             [ngTemplateOutletContext]=\"{view: views[2], row: row, col: col}\">\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <table *ngIf=\"2!==currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\r\n                        <thead>\r\n                        <tr class=\"text-center\">\r\n                            <th *ngFor=\"let dayHeader of views[2].dayHeaders\">\r\n                                <small>{{dayHeader}}</small>\r\n                            </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\r\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\">\r\n                                <ng-template [ngTemplateOutlet]=\"monthviewInactiveDisplayEventTemplate\"\r\n                                             [ngTemplateOutletContext]=\"{view: views[2], row: row, col: col}\">\r\n                                </ng-template>\r\n                            </td>\r\n                        <tr>\r\n                        </tbody>\r\n                    </table>\r\n                </ion-slide>\r\n            </ion-slides>\r\n            <ng-template [ngTemplateOutlet]=\"monthviewEventDetailTemplate\"\r\n                         [ngTemplateOutletContext]=\"{showEventDetail:showEventDetail, selectedDate: selectedDate, noEventsLabel: noEventsLabel}\">\r\n            </ng-template>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .text-muted {\r\n            color: #999;\r\n        }\r\n\r\n        .table-fixed {\r\n            table-layout: fixed;\r\n        }\r\n\r\n        .table {\r\n            width: 100%;\r\n            max-width: 100%;\r\n            background-color: transparent;\r\n        }\r\n\r\n        .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td,\r\n        .table > tbody > tr > td, .table > tfoot > tr > td {\r\n            padding: 8px;\r\n            line-height: 20px;\r\n            vertical-align: top;\r\n        }\r\n\r\n        .table > thead > tr > th {\r\n            vertical-align: bottom;\r\n            border-bottom: 2px solid #ddd;\r\n        }\r\n\r\n        .table > thead:first-child > tr:first-child > th, .table > thead:first-child > tr:first-child > td {\r\n            border-top: 0\r\n        }\r\n\r\n        .table > tbody + tbody {\r\n            border-top: 2px solid #ddd;\r\n        }\r\n\r\n        .table-bordered {\r\n            border: 1px solid #ddd;\r\n        }\r\n\r\n        .table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th,\r\n        .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {\r\n            border: 1px solid #ddd;\r\n        }\r\n\r\n        .table-bordered > thead > tr > th, .table-bordered > thead > tr > td {\r\n            border-bottom-width: 2px;\r\n        }\r\n\r\n        .table-striped > tbody > tr:nth-child(odd) > td, .table-striped > tbody > tr:nth-child(odd) > th {\r\n            background-color: #f9f9f9\r\n        }\r\n\r\n        .monthview-primary-with-event {\r\n            background-color: #3a87ad;\r\n            color: white;\r\n        }\r\n\r\n        .monthview-current {\r\n            background-color: #f0f0f0;\r\n        }\r\n\r\n        .monthview-selected {\r\n            background-color: #009900;\r\n            color: white;\r\n        }\r\n\r\n        .monthview-datetable td.monthview-disabled {\r\n            color: lightgrey;\r\n            cursor: default;\r\n        }\r\n\r\n        .monthview-datetable th {\r\n            text-align: center;\r\n        }\r\n\r\n        .monthview-datetable td {\r\n            cursor: pointer;\r\n            text-align: center;\r\n        }\r\n\r\n        .monthview-secondary-with-event {\r\n            background-color: #d9edf7;\r\n        }\r\n\r\n        ::-webkit-scrollbar,\r\n        *::-webkit-scrollbar {\r\n            display: none;\r\n        }\r\n    `]\r\n})\r\nexport class MonthViewComponent implements ICalendarComponent, OnInit, OnDestroy, OnChanges, AfterViewInit {\r\n\r\n    constructor(private calendarService: CalendarService) {\r\n    }\r\n    ;\r\n\r\n    @ViewChild('monthSlider', {static: true}) slider: IonSlides;\r\n\r\n    @Input() monthviewDisplayEventTemplate: TemplateRef<IMonthViewDisplayEventTemplateContext>;\r\n    @Input() monthviewInactiveDisplayEventTemplate: TemplateRef<IMonthViewDisplayEventTemplateContext>;\r\n    @Input() monthviewEventDetailTemplate: TemplateRef<IMonthViewDisplayEventTemplateContext>;\r\n\r\n    @Input() formatDay: string;\r\n    @Input() formatDayHeader: string;\r\n    @Input() formatMonthTitle: string;\r\n    @Input() eventSource: IEvent[];\r\n    @Input() startingDayMonth: number;\r\n    @Input() showEventDetail: boolean;\r\n    @Input() noEventsLabel: string;\r\n    @Input() autoSelect = true;\r\n    @Input() markDisabled: (date: Date) => boolean;\r\n    @Input() locale: string;\r\n    @Input() dateFormatter: IDateFormatter;\r\n    @Input() dir = '';\r\n    @Input() lockSwipeToPrev: boolean;\r\n    @Input() lockSwipes: boolean;\r\n    @Input() sliderOptions: any;\r\n\r\n    @Output() onRangeChanged = new EventEmitter<IRange>();\r\n    @Output() onEventSelected = new EventEmitter<IEvent>();\r\n    @Output() onTimeSelected = new EventEmitter<ITimeSelected>(true);\r\n    @Output() onTitleChanged = new EventEmitter<string>(true);\r\n\r\n    public views: IMonthView[] = [];\r\n    public currentViewIndex = 0;\r\n    public selectedDate: IMonthViewRow;\r\n    public range: IRange;\r\n    public mode: CalendarMode = 'month';\r\n    public direction = 0;\r\n\r\n    private moveOnSelected = false;\r\n    private inited = false;\r\n    private callbackOnInit = true;\r\n\r\n    private currentDateChangedFromParentSubscription: Subscription;\r\n    private eventSourceChangedSubscription: Subscription;\r\n    private slideChangedSubscription: Subscription;\r\n    private slideUpdatedSubscription: Subscription;\r\n\r\n    private formatDayLabel: (date: Date) => string;\r\n    private formatDayHeaderLabel: (date: Date) => string;\r\n    private formatTitle: (date: Date) => string;\r\n\r\n    static getDates(startDate: Date, n: number): Date[] {\r\n        const dates = new Array(n),\r\n            current = new Date(startDate.getTime());\r\n        let i = 0;\r\n        while (i < n) {\r\n            dates[i++] = new Date(current.getTime());\r\n            current.setDate(current.getDate() + 1);\r\n        }\r\n        return dates;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.sliderOptions) {\r\n            this.sliderOptions = {};\r\n        }\r\n        this.sliderOptions.loop = true;\r\n\r\n        if (this.dateFormatter && this.dateFormatter.formatMonthViewDay) {\r\n            this.formatDayLabel = this.dateFormatter.formatMonthViewDay;\r\n        } else {\r\n            const dayLabelDatePipe = new DatePipe('en-US');\r\n            this.formatDayLabel = function(date: Date) {\r\n                return dayLabelDatePipe.transform(date, this.formatDay);\r\n            };\r\n        }\r\n\r\n        if (this.dateFormatter && this.dateFormatter.formatMonthViewDayHeader) {\r\n            this.formatDayHeaderLabel = this.dateFormatter.formatMonthViewDayHeader;\r\n        } else {\r\n            const datePipe = new DatePipe(this.locale);\r\n            this.formatDayHeaderLabel = function(date: Date) {\r\n                return datePipe.transform(date, this.formatDayHeader);\r\n            };\r\n        }\r\n\r\n        if (this.dateFormatter && this.dateFormatter.formatMonthViewTitle) {\r\n            this.formatTitle = this.dateFormatter.formatMonthViewTitle;\r\n        } else {\r\n            const datePipe = new DatePipe(this.locale);\r\n            this.formatTitle = function(date: Date) {\r\n                return datePipe.transform(date, this.formatMonthTitle);\r\n            };\r\n        }\r\n\r\n        if (this.lockSwipeToPrev) {\r\n            this.slider.lockSwipeToPrev(true);\r\n        }\r\n\r\n        if (this.lockSwipes) {\r\n            this.slider.lockSwipes(true);\r\n        }\r\n\r\n        this.refreshView();\r\n        this.inited = true;\r\n\r\n        this.currentDateChangedFromParentSubscription = this.calendarService.currentDateChangedFromParent$.subscribe(currentDate => {\r\n            this.refreshView();\r\n        });\r\n\r\n        this.eventSourceChangedSubscription = this.calendarService.eventSourceChanged$.subscribe(() => {\r\n            this.onDataLoaded();\r\n        });\r\n\r\n        this.slideChangedSubscription = this.calendarService.slideChanged$.subscribe(direction => {\r\n            if (direction === 1) {\r\n                this.slider.slideNext();\r\n            } else if (direction === -1) {\r\n                this.slider.slidePrev();\r\n            }\r\n        });\r\n\r\n        this.slideUpdatedSubscription = this.calendarService.slideUpdated$.subscribe(() => {\r\n            this.slider.update();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.currentDateChangedFromParentSubscription) {\r\n            this.currentDateChangedFromParentSubscription.unsubscribe();\r\n            this.currentDateChangedFromParentSubscription = null;\r\n        }\r\n\r\n        if (this.eventSourceChangedSubscription) {\r\n            this.eventSourceChangedSubscription.unsubscribe();\r\n            this.eventSourceChangedSubscription = null;\r\n        }\r\n\r\n        if (this.slideChangedSubscription) {\r\n            this.slideChangedSubscription.unsubscribe();\r\n            this.slideChangedSubscription = null;\r\n        }\r\n\r\n        if (this.slideUpdatedSubscription) {\r\n            this.slideUpdatedSubscription.unsubscribe();\r\n            this.slideUpdatedSubscription = null;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (!this.inited) {\r\n            return;\r\n        }\r\n\r\n        const eventSourceChange = changes.eventSource;\r\n        if (eventSourceChange && eventSourceChange.currentValue) {\r\n            this.onDataLoaded();\r\n        }\r\n\r\n        const lockSwipeToPrev = changes.lockSwipeToPrev;\r\n        if (lockSwipeToPrev) {\r\n            this.slider.lockSwipeToPrev(lockSwipeToPrev.currentValue);\r\n        }\r\n\r\n        const lockSwipes = changes.lockSwipes;\r\n        if (lockSwipes) {\r\n            this.slider.lockSwipes(lockSwipes.currentValue);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const title = this.getTitle();\r\n        this.onTitleChanged.emit(title);\r\n    }\r\n\r\n    onSlideChanged() {\r\n        if (this.callbackOnInit) {\r\n            this.callbackOnInit = false;\r\n            return;\r\n        }\r\n\r\n        let direction = 0;\r\n        const currentViewIndex = this.currentViewIndex;\r\n\r\n        this.slider.getActiveIndex().then((currentSlideIndex) => {\r\n            currentSlideIndex = (currentSlideIndex + 2) % 3;\r\n            if(isNaN(currentSlideIndex)) {\r\n                currentSlideIndex = currentViewIndex;\r\n            }\r\n\r\n            if (currentSlideIndex - currentViewIndex === 1) {\r\n                direction = 1;\r\n            } else if (currentSlideIndex === 0 && currentViewIndex === 2) {\r\n                direction = 1;\r\n                this.slider.slideTo(1, 0, false);\r\n            } else if (currentViewIndex - currentSlideIndex === 1) {\r\n                direction = -1;\r\n            } else if (currentSlideIndex === 2 && currentViewIndex === 0) {\r\n                direction = -1;\r\n                this.slider.slideTo(3, 0, false);\r\n            }\r\n            this.currentViewIndex = currentSlideIndex;\r\n            this.move(direction);\r\n        });\r\n    }\r\n\r\n    move(direction: number) {\r\n        if (direction === 0) {\r\n            return;\r\n        }\r\n\r\n        this.direction = direction;\r\n        if (!this.moveOnSelected) {\r\n            const adjacentDate = this.calendarService.getAdjacentCalendarDate(this.mode, direction);\r\n            this.calendarService.setCurrentDate(adjacentDate);\r\n        }\r\n        this.refreshView();\r\n        this.direction = 0;\r\n        this.moveOnSelected = false;\r\n    }\r\n\r\n    createDateObject(date: Date): IMonthViewRow {\r\n        let disabled = false;\r\n        if (this.markDisabled) {\r\n            disabled = this.markDisabled(date);\r\n        }\r\n\r\n        return {\r\n            date,\r\n            events: [],\r\n            label: this.formatDayLabel(date),\r\n            secondary: false,\r\n            disabled\r\n        };\r\n    }\r\n\r\n    getViewData(startTime: Date): IMonthView {\r\n        const startDate = startTime,\r\n            date = startDate.getDate(),\r\n            month = (startDate.getMonth() + (date !== 1 ? 1 : 0)) % 12;\r\n\r\n        const dates = MonthViewComponent.getDates(startDate, 42);\r\n        const days: IMonthViewRow[] = [];\r\n        for (let i = 0; i < 42; i++) {\r\n            const dateObject = this.createDateObject(dates[i]);\r\n            dateObject.secondary = dates[i].getMonth() !== month;\r\n            days[i] = dateObject;\r\n        }\r\n\r\n        const dayHeaders: string[] = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            dayHeaders.push(this.formatDayHeaderLabel(days[i].date));\r\n        }\r\n        return {\r\n            dates: days,\r\n            dayHeaders\r\n        };\r\n    }\r\n\r\n    getHighlightClass(date: IMonthViewRow): string {\r\n        let className = '';\r\n\r\n        if (date.hasEvent) {\r\n            if (date.secondary) {\r\n                className = 'monthview-secondary-with-event';\r\n            } else {\r\n                className = 'monthview-primary-with-event';\r\n            }\r\n        }\r\n\r\n        if (date.selected) {\r\n            if (className) {\r\n                className += ' ';\r\n            }\r\n            className += 'monthview-selected';\r\n        }\r\n\r\n        if (date.current) {\r\n            if (className) {\r\n                className += ' ';\r\n            }\r\n            className += 'monthview-current';\r\n        }\r\n\r\n        if (date.secondary) {\r\n            if (className) {\r\n                className += ' ';\r\n            }\r\n            className += 'text-muted';\r\n        }\r\n\r\n        if (date.disabled) {\r\n            if (className) {\r\n                className += ' ';\r\n            }\r\n            className += 'monthview-disabled';\r\n        }\r\n        return className;\r\n    }\r\n\r\n    getRange(currentDate: Date): IRange {\r\n        const year = currentDate.getFullYear(),\r\n            month = currentDate.getMonth(),\r\n            firstDayOfMonth = new Date(year, month, 1, 12, 0, 0), // set hour to 12 to avoid DST problem\r\n\r\n            difference = this.startingDayMonth - firstDayOfMonth.getDay(),\r\n            numDisplayedFromPreviousMonth = (difference > 0) ? 7 - difference : -difference,\r\n            startDate = new Date(firstDayOfMonth.getTime());\r\n\r\n        if (numDisplayedFromPreviousMonth > 0) {\r\n            startDate.setDate(-numDisplayedFromPreviousMonth + 1);\r\n        }\r\n\r\n        const endDate = new Date(startDate.getTime());\r\n        endDate.setDate(endDate.getDate() + 42);\r\n\r\n        return {\r\n            startTime: startDate,\r\n            endTime: endDate\r\n        };\r\n    }\r\n\r\n    onDataLoaded() {\r\n        const range = this.range,\r\n            eventSource = this.eventSource,\r\n            len = eventSource ? eventSource.length : 0,\r\n            startTime = range.startTime,\r\n            endTime = range.endTime,\r\n            utcStartTime = Date.UTC(startTime.getFullYear(), startTime.getMonth(), startTime.getDate()),\r\n            utcEndTime = Date.UTC(endTime.getFullYear(), endTime.getMonth(), endTime.getDate()),\r\n            currentViewIndex = this.currentViewIndex,\r\n            dates = this.views[currentViewIndex].dates,\r\n            oneDay = 86400000,\r\n            eps = 0.0006;\r\n\r\n        for (let r = 0; r < 42; r += 1) {\r\n            if (dates[r].hasEvent) {\r\n                dates[r].hasEvent = false;\r\n                dates[r].events = [];\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < len; i += 1) {\r\n            const event = eventSource[i],\r\n                eventStartTime = event.startTime,\r\n                eventEndTime = event.endTime;\r\n\r\n            let eventUTCStartTime: number,\r\n                eventUTCEndTime: number;\r\n            if (event.allDay) {\r\n                eventUTCStartTime = eventStartTime.getTime();\r\n                eventUTCEndTime = eventEndTime.getTime();\r\n            } else {\r\n                eventUTCStartTime = Date.UTC(eventStartTime.getFullYear(), eventStartTime.getMonth(), eventStartTime.getDate());\r\n                eventUTCEndTime = Date.UTC(eventEndTime.getFullYear(), eventEndTime.getMonth(), eventEndTime.getDate() + 1);\r\n            }\r\n\r\n            if (eventUTCEndTime <= utcStartTime || eventUTCStartTime >= utcEndTime) {\r\n                continue;\r\n            }\r\n\r\n            let timeDifferenceStart: number,\r\n                timeDifferenceEnd: number;\r\n\r\n            if (eventUTCStartTime < utcStartTime) {\r\n                timeDifferenceStart = 0;\r\n            } else {\r\n                timeDifferenceStart = (eventUTCStartTime - utcStartTime) / oneDay;\r\n            }\r\n\r\n            if (eventUTCEndTime > utcEndTime) {\r\n                timeDifferenceEnd = (utcEndTime - utcStartTime) / oneDay;\r\n            } else {\r\n                timeDifferenceEnd = (eventUTCEndTime - utcStartTime) / oneDay;\r\n            }\r\n\r\n            let index = Math.floor(timeDifferenceStart);\r\n            const endIndex = Math.ceil(timeDifferenceEnd - eps);\r\n            while (index < endIndex) {\r\n                dates[index].hasEvent = true;\r\n                let eventSet = dates[index].events;\r\n                if (eventSet) {\r\n                    eventSet.push(event);\r\n                } else {\r\n                    eventSet = [];\r\n                    eventSet.push(event);\r\n                    dates[index].events = eventSet;\r\n                }\r\n                index += 1;\r\n            }\r\n        }\r\n\r\n        for (let r = 0; r < 42; r += 1) {\r\n            if (dates[r].hasEvent) {\r\n                dates[r].events.sort(this.compareEvent);\r\n            }\r\n        }\r\n\r\n        if (this.autoSelect) {\r\n            let findSelected = false;\r\n            for (let r = 0; r < 42; r += 1) {\r\n                if (dates[r].selected) {\r\n                    this.selectedDate = dates[r];\r\n                    findSelected = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (findSelected) {\r\n                this.onTimeSelected.emit({\r\n                    selectedTime: this.selectedDate.date,\r\n                    events: this.selectedDate.events,\r\n                    disabled: this.selectedDate.disabled\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    refreshView() {\r\n        this.range = this.getRange(this.calendarService.currentDate);\r\n\r\n        if (this.inited) {\r\n            const title = this.getTitle();\r\n            this.onTitleChanged.emit(title);\r\n        }\r\n        this.calendarService.populateAdjacentViews(this);\r\n        this.updateCurrentView(this.range.startTime, this.views[this.currentViewIndex]);\r\n        this.calendarService.rangeChanged(this);\r\n    }\r\n\r\n    getTitle(): string {\r\n        const currentViewStartDate = this.range.startTime,\r\n            date = currentViewStartDate.getDate(),\r\n            month = (currentViewStartDate.getMonth() + (date !== 1 ? 1 : 0)) % 12,\r\n            year = currentViewStartDate.getFullYear() + (date !== 1 && month === 0 ? 1 : 0),\r\n            headerDate = new Date(year, month, 1, 12, 0, 0, 0);\r\n        return this.formatTitle(headerDate);\r\n    }\r\n\r\n    private compareEvent(event1: IEvent, event2: IEvent): number {\r\n        if (event1.allDay) {\r\n            return 1;\r\n        } else if (event2.allDay) {\r\n            return -1;\r\n        } else {\r\n            return (event1.startTime.getTime() - event2.startTime.getTime());\r\n        }\r\n    }\r\n\r\n    select(viewDate: IMonthViewRow) {\r\n        if (!this.views) {\r\n            return;\r\n        }\r\n\r\n        const selectedDate = viewDate.date,\r\n            events = viewDate.events;\r\n\r\n        if (!viewDate.disabled) {\r\n            const dates = this.views[this.currentViewIndex].dates,\r\n                currentCalendarDate = this.calendarService.currentDate,\r\n                currentMonth = currentCalendarDate.getMonth(),\r\n                currentYear = currentCalendarDate.getFullYear(),\r\n                selectedMonth = selectedDate.getMonth(),\r\n                selectedYear = selectedDate.getFullYear();\r\n            let direction = 0;\r\n\r\n            if (currentYear === selectedYear) {\r\n                if (currentMonth !== selectedMonth) {\r\n                    direction = currentMonth < selectedMonth ? 1 : -1;\r\n                }\r\n            } else {\r\n                direction = currentYear < selectedYear ? 1 : -1;\r\n            }\r\n\r\n            this.calendarService.setCurrentDate(selectedDate);\r\n            if (direction === 0) {\r\n                const currentViewStartDate = this.range.startTime,\r\n                    oneDay = 86400000,\r\n                    selectedDayDifference = Math.round((Date.UTC(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay);\r\n\r\n                for (let r = 0; r < 42; r += 1) {\r\n                    dates[r].selected = false;\r\n                }\r\n\r\n                if (selectedDayDifference >= 0 && selectedDayDifference < 42) {\r\n                    dates[selectedDayDifference].selected = true;\r\n                    this.selectedDate = dates[selectedDayDifference];\r\n                }\r\n            } else {\r\n                this.moveOnSelected = true;\r\n                this.slideView(direction);\r\n            }\r\n        }\r\n\r\n        this.onTimeSelected.emit({selectedTime: selectedDate, events, disabled: viewDate.disabled});\r\n    }\r\n\r\n    slideView(direction: number) {\r\n        if (direction === 1) {\r\n            this.slider.slideNext();\r\n        } else if (direction === -1) {\r\n            this.slider.slidePrev();\r\n        }\r\n    }\r\n\r\n    updateCurrentView(currentViewStartDate: Date, view: IMonthView) {\r\n        const currentCalendarDate = this.calendarService.currentDate,\r\n            today = new Date(),\r\n            oneDay = 86400000,\r\n            selectedDayDifference = Math.round((Date.UTC(currentCalendarDate.getFullYear(), currentCalendarDate.getMonth(), currentCalendarDate.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay),\r\n            currentDayDifference = Math.round((Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay);\r\n\r\n        for (let r = 0; r < 42; r += 1) {\r\n            view.dates[r].selected = false;\r\n        }\r\n\r\n        if (selectedDayDifference >= 0 && selectedDayDifference < 42 && !view.dates[selectedDayDifference].disabled && (this.autoSelect || this.moveOnSelected)) {\r\n            view.dates[selectedDayDifference].selected = true;\r\n            this.selectedDate = view.dates[selectedDayDifference];\r\n        } else {\r\n            this.selectedDate = {\r\n                date: null,\r\n                events: [],\r\n                label: null,\r\n                secondary: null,\r\n                disabled: false\r\n            };\r\n        }\r\n\r\n        if (currentDayDifference >= 0 && currentDayDifference < 42) {\r\n            view.dates[currentDayDifference].current = true;\r\n        }\r\n    }\r\n\r\n    eventSelected(event: IEvent) {\r\n        this.onEventSelected.emit(event);\r\n    }\r\n}\r\n","import {DatePipe} from '@angular/common';\r\nimport {IonSlides} from '@ionic/angular';\r\nimport {\r\n    Component,\r\n    OnInit,\r\n    OnChanges,\r\n    HostBinding,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    TemplateRef,\r\n    ElementRef,\r\n    OnDestroy, AfterViewInit\r\n} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {\r\n    ICalendarComponent,\r\n    IDisplayEvent,\r\n    IEvent,\r\n    ITimeSelected,\r\n    IRange,\r\n    IWeekView,\r\n    IWeekViewRow,\r\n    IWeekViewDateRow,\r\n    CalendarMode,\r\n    IDateFormatter,\r\n    IDisplayWeekViewHeader\r\n} from './calendar';\r\nimport {CalendarService} from './calendar.service';\r\nimport {\r\n    IDisplayAllDayEvent,\r\n    IWeekViewAllDayEventSectionTemplateContext,\r\n    IWeekViewNormalEventSectionTemplateContext\r\n} from './calendar';\r\n\r\n@Component({\r\n    selector: 'weekview',\r\n    template: `\r\n        <ion-slides #weekSlider [options]=\"sliderOptions\" [dir]=\"dir\" (ionSlideDidChange)=\"onSlideChanged()\"\r\n                    class=\"slides-container\">\r\n            <ion-slide class=\"slide-container\">\r\n                <table class=\"table table-bordered table-fixed weekview-header\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th class=\"calendar-hour-column\"></th>\r\n                        <th class=\"weekview-header text-center\" *ngFor=\"let date of views[0].dates\"\r\n                            [ngClass]=\"getHighlightClass(date)\"\r\n                            (click)=\"daySelected(date)\">\r\n                            <ng-template [ngTemplateOutlet]=\"weekviewHeaderTemplate\"\r\n                                         [ngTemplateOutletContext]=\"{viewDate:date}\">\r\n                            </ng-template>\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div *ngIf=\"0===currentViewIndex\">\r\n                    <div class=\"weekview-allday-table\">\r\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\r\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\r\n                            <table class=\"table table-fixed weekview-allday-content-table\">\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td *ngFor=\"let day of views[0].dates\" class=\"calendar-cell\">\r\n                                        <ng-template [ngTemplateOutlet]=\"weekviewAllDayEventSectionTemplate\"\r\n                                                     [ngTemplateOutletContext]=\"{day:day, eventTemplate:weekviewAllDayEventTemplate}\">\r\n                                        </ng-template>\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\"\r\n                                          [emitEvent]=\"preserveScrollPosition\" (onScroll)=\"setScrollPosition($event)\">\r\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\r\n                            <tbody>\r\n                            <tr *ngFor=\"let row of views[0].rows; let i = index\">\r\n                                <td class=\"calendar-hour-column text-center\">\r\n                                    {{hourColumnLabels[i]}}\r\n                                </td>\r\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\" tappable\r\n                                    (click)=\"select(tm.time, tm.events)\">\r\n                                    <ng-template [ngTemplateOutlet]=\"weekviewNormalEventSectionTemplate\"\r\n                                                 [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:weekviewNormalEventTemplate}\">\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </init-position-scroll>\r\n                </div>\r\n                <div *ngIf=\"0!==currentViewIndex\">\r\n                    <div class=\"weekview-allday-table\">\r\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\r\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\r\n                            <table class=\"table table-fixed weekview-allday-content-table\">\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td *ngFor=\"let day of views[0].dates\" class=\"calendar-cell\">\r\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveAllDayEventSectionTemplate\"\r\n                                                     [ngTemplateOutletContext]=\"{day:day}\">\r\n                                        </ng-template>\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\">\r\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\r\n                            <tbody>\r\n                            <tr *ngFor=\"let row of views[0].rows; let i = index\">\r\n                                <td class=\"calendar-hour-column text-center\">\r\n                                    {{hourColumnLabels[i]}}\r\n                                </td>\r\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\">\r\n                                    <ng-template [ngTemplateOutlet]=\"weekviewInactiveNormalEventSectionTemplate\"\r\n                                                 [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </init-position-scroll>\r\n                </div>\r\n            </ion-slide>\r\n            <ion-slide class=\"slide-container\">\r\n                <table class=\"table table-bordered table-fixed weekview-header\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th class=\"calendar-hour-column\"></th>\r\n                        <th class=\"weekview-header text-center\" *ngFor=\"let date of views[1].dates\"\r\n                            [ngClass]=\"getHighlightClass(date)\"\r\n                            (click)=\"daySelected(date)\">\r\n                            <ng-template [ngTemplateOutlet]=\"weekviewHeaderTemplate\"\r\n                                         [ngTemplateOutletContext]=\"{viewDate:date}\">\r\n                            </ng-template>\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div *ngIf=\"1===currentViewIndex\">\r\n                    <div class=\"weekview-allday-table\">\r\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\r\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\r\n                            <table class=\"table table-fixed weekview-allday-content-table\">\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td *ngFor=\"let day of views[1].dates\" class=\"calendar-cell\">\r\n                                        <ng-template [ngTemplateOutlet]=\"weekviewAllDayEventSectionTemplate\"\r\n                                                     [ngTemplateOutletContext]=\"{day:day, eventTemplate:weekviewAllDayEventTemplate}\">\r\n                                        </ng-template>\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\"\r\n                                          [emitEvent]=\"preserveScrollPosition\" (onScroll)=\"setScrollPosition($event)\">\r\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\r\n                            <tbody>\r\n                            <tr *ngFor=\"let row of views[1].rows; let i = index\">\r\n                                <td class=\"calendar-hour-column text-center\">\r\n                                    {{hourColumnLabels[i]}}\r\n                                </td>\r\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\" tappable\r\n                                    (click)=\"select(tm.time, tm.events)\">\r\n                                    <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\r\n                                        <ng-template [ngTemplateOutlet]=\"weekviewNormalEventSectionTemplate\"\r\n                                                     [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:weekviewNormalEventTemplate}\">\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </init-position-scroll>\r\n                </div>\r\n                <div *ngIf=\"1!==currentViewIndex\">\r\n                    <div class=\"weekview-allday-table\">\r\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\r\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\r\n                            <table class=\"table table-fixed weekview-allday-content-table\">\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td *ngFor=\"let day of views[1].dates\" class=\"calendar-cell\">\r\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveAllDayEventSectionTemplate\"\r\n                                                     [ngTemplateOutletContext]=\"{day:day}\">\r\n                                        </ng-template>\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\">\r\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\r\n                            <tbody>\r\n                            <tr *ngFor=\"let row of views[1].rows; let i = index\">\r\n                                <td class=\"calendar-hour-column text-center\">\r\n                                    {{hourColumnLabels[i]}}\r\n                                </td>\r\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\">\r\n                                    <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\r\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveNormalEventSectionTemplate\"\r\n                                                     [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </init-position-scroll>\r\n                </div>\r\n            </ion-slide>\r\n            <ion-slide class=\"slide-container\">\r\n                <table class=\"table table-bordered table-fixed weekview-header\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th class=\"calendar-hour-column\"></th>\r\n                        <th class=\"weekview-header text-center\" *ngFor=\"let date of views[2].dates\"\r\n                            [ngClass]=\"getHighlightClass(date)\"\r\n                            (click)=\"daySelected(date)\">\r\n                            <ng-template [ngTemplateOutlet]=\"weekviewHeaderTemplate\"\r\n                                         [ngTemplateOutletContext]=\"{viewDate:date}\">\r\n                            </ng-template>\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div *ngIf=\"2===currentViewIndex\">\r\n                    <div class=\"weekview-allday-table\">\r\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\r\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\r\n                            <table class=\"table table-fixed weekview-allday-content-table\">\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td *ngFor=\"let day of views[2].dates\" class=\"calendar-cell\">\r\n                                        <ng-template [ngTemplateOutlet]=\"weekviewAllDayEventSectionTemplate\"\r\n                                                     [ngTemplateOutletContext]=\"{day:day, eventTemplate:weekviewAllDayEventTemplate}\">\r\n                                        </ng-template>\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\"\r\n                                          [emitEvent]=\"preserveScrollPosition\" (onScroll)=\"setScrollPosition($event)\">\r\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\r\n                            <tbody>\r\n                            <tr *ngFor=\"let row of views[2].rows; let i = index\">\r\n                                <td class=\"calendar-hour-column text-center\">\r\n                                    {{hourColumnLabels[i]}}\r\n                                </td>\r\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\" tappable\r\n                                    (click)=\"select(tm.time, tm.events)\">\r\n                                    <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\r\n                                        <ng-template [ngTemplateOutlet]=\"weekviewNormalEventSectionTemplate\"\r\n                                                     [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:weekviewNormalEventTemplate}\">\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </init-position-scroll>\r\n                </div>\r\n                <div *ngIf=\"2!==currentViewIndex\">\r\n                    <div class=\"weekview-allday-table\">\r\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\r\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\r\n                            <table class=\"table table-fixed weekview-allday-content-table\">\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td *ngFor=\"let day of views[2].dates\" class=\"calendar-cell\">\r\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveAllDayEventSectionTemplate\"\r\n                                                     [ngTemplateOutletContext]=\"{day:day}\">\r\n                                        </ng-template>\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\">\r\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\r\n                            <tbody>\r\n                            <tr *ngFor=\"let row of views[2].rows; let i = index\">\r\n                                <td class=\"calendar-hour-column text-center\">\r\n                                    {{hourColumnLabels[i]}}\r\n                                </td>\r\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\">\r\n                                    <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\r\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveNormalEventSectionTemplate\"\r\n                                                     [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </init-position-scroll>\r\n                </div>\r\n            </ion-slide>\r\n        </ion-slides>\r\n    `,\r\n    styles: [`\r\n        .table-fixed {\r\n            table-layout: fixed;\r\n        }\r\n\r\n        .table {\r\n            width: 100%;\r\n            max-width: 100%;\r\n            background-color: transparent;\r\n        }\r\n\r\n        .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td,\r\n        .table > tbody > tr > td, .table > tfoot > tr > td {\r\n            padding: 8px;\r\n            line-height: 20px;\r\n            vertical-align: top;\r\n        }\r\n\r\n        .table > thead > tr > th {\r\n            vertical-align: bottom;\r\n            border-bottom: 2px solid #ddd;\r\n        }\r\n\r\n        .table > thead:first-child > tr:first-child > th, .table > thead:first-child > tr:first-child > td {\r\n            border-top: 0\r\n        }\r\n\r\n        .table > tbody + tbody {\r\n            border-top: 2px solid #ddd;\r\n        }\r\n\r\n        .table-bordered {\r\n            border: 1px solid #ddd;\r\n        }\r\n\r\n        .table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th,\r\n        .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {\r\n            border: 1px solid #ddd;\r\n        }\r\n\r\n        .table-bordered > thead > tr > th, .table-bordered > thead > tr > td {\r\n            border-bottom-width: 2px;\r\n        }\r\n\r\n        .table-striped > tbody > tr:nth-child(odd) > td, .table-striped > tbody > tr:nth-child(odd) > th {\r\n            background-color: #f9f9f9\r\n        }\r\n\r\n        .calendar-hour-column {\r\n            width: 50px;\r\n            white-space: nowrap;\r\n        }\r\n\r\n        .calendar-event-wrap {\r\n            position: relative;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n\r\n        .calendar-event {\r\n            position: absolute;\r\n            padding: 2px;\r\n            cursor: pointer;\r\n            z-index: 10000;\r\n        }\r\n\r\n        .calendar-cell {\r\n            padding: 0 !important;\r\n            height: 37px;\r\n        }\r\n\r\n        .slides-container {\r\n            height: 100%;\r\n        }\r\n\r\n        .slide-container {\r\n            display: block;\r\n        }\r\n\r\n        .weekview-allday-label {\r\n            float: left;\r\n            height: 100%;\r\n            line-height: 50px;\r\n            text-align: center;\r\n            width: 50px;\r\n            border-left: 1px solid #ddd;\r\n        }\r\n\r\n        [dir=\"rtl\"] .weekview-allday-label {\r\n            float: right;\r\n            border-right: 1px solid #ddd;\r\n        }\r\n\r\n        .weekview-allday-content-wrapper {\r\n            margin-left: 50px;\r\n            overflow: hidden;\r\n            height: 51px;\r\n        }\r\n\r\n        [dir=\"rtl\"] .weekview-allday-content-wrapper {\r\n            margin-left: 0;\r\n            margin-right: 50px;\r\n        }\r\n\r\n        .weekview-allday-content-table {\r\n            min-height: 50px;\r\n        }\r\n\r\n        .weekview-allday-content-table td {\r\n            border-left: 1px solid #ddd;\r\n            border-right: 1px solid #ddd;\r\n        }\r\n\r\n        .weekview-header th {\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            font-size: 14px;\r\n        }\r\n\r\n        .weekview-allday-table {\r\n            height: 50px;\r\n            position: relative;\r\n            border-bottom: 1px solid #ddd;\r\n            font-size: 14px;\r\n        }\r\n\r\n        .weekview-normal-event-container {\r\n            margin-top: 87px;\r\n            overflow: hidden;\r\n            left: 0;\r\n            right: 0;\r\n            top: 0;\r\n            bottom: 0;\r\n            position: absolute;\r\n            font-size: 14px;\r\n        }\r\n\r\n        .scroll-content {\r\n            overflow-y: auto;\r\n            overflow-x: hidden;\r\n        }\r\n\r\n        ::-webkit-scrollbar,\r\n        *::-webkit-scrollbar {\r\n            display: none;\r\n        }\r\n\r\n        .table > tbody > tr > td.calendar-hour-column {\r\n            padding-left: 0;\r\n            padding-right: 0;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        @media (max-width: 750px) {\r\n            .weekview-allday-label, .calendar-hour-column {\r\n                width: 31px;\r\n                font-size: 12px;\r\n            }\r\n\r\n            .weekview-allday-label {\r\n                padding-top: 4px;\r\n            }\r\n\r\n            .table > tbody > tr > td.calendar-hour-column {\r\n                padding-left: 0;\r\n                padding-right: 0;\r\n                vertical-align: middle;\r\n                line-height: 12px;\r\n            }\r\n\r\n            .table > thead > tr > th.weekview-header {\r\n                padding-left: 0;\r\n                padding-right: 0;\r\n                font-size: 12px;\r\n            }\r\n\r\n            .weekview-allday-label {\r\n                line-height: 20px;\r\n            }\r\n\r\n            .weekview-allday-content-wrapper {\r\n                margin-left: 31px;\r\n            }\r\n\r\n            [dir=\"rtl\"] .weekview-allday-content-wrapper {\r\n                margin-left: 0;\r\n                margin-right: 31px;\r\n            }\r\n        }\r\n    `],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class WeekViewComponent implements ICalendarComponent, OnInit, OnChanges, OnDestroy, AfterViewInit {\r\n\r\n    constructor(private calendarService: CalendarService, private elm: ElementRef) {\r\n    }\r\n\r\n    @ViewChild('weekSlider', {static: true}) slider: IonSlides;\r\n    @HostBinding('class.weekview') class = true;\r\n\r\n    @Input() weekviewHeaderTemplate: TemplateRef<IDisplayWeekViewHeader>;\r\n    @Input() weekviewAllDayEventTemplate: TemplateRef<IDisplayAllDayEvent>;\r\n    @Input() weekviewNormalEventTemplate: TemplateRef<IDisplayEvent>;\r\n    @Input() weekviewAllDayEventSectionTemplate: TemplateRef<IWeekViewAllDayEventSectionTemplateContext>;\r\n    @Input() weekviewNormalEventSectionTemplate: TemplateRef<IWeekViewNormalEventSectionTemplateContext>;\r\n    @Input() weekviewInactiveAllDayEventSectionTemplate: TemplateRef<IWeekViewAllDayEventSectionTemplateContext>;\r\n    @Input() weekviewInactiveNormalEventSectionTemplate: TemplateRef<IWeekViewNormalEventSectionTemplateContext>;\r\n\r\n    @Input() formatWeekTitle: string;\r\n    @Input() formatWeekViewDayHeader: string;\r\n    @Input() formatHourColumn: string;\r\n    @Input() startingDayWeek: number;\r\n    @Input() allDayLabel: string;\r\n    @Input() hourParts: number;\r\n    @Input() eventSource: IEvent[];\r\n    @Input() autoSelect = true;\r\n    @Input() markDisabled: (date: Date) => boolean;\r\n    @Input() locale: string;\r\n    @Input() dateFormatter: IDateFormatter;\r\n    @Input() dir = '';\r\n    @Input() scrollToHour = 0;\r\n    @Input() preserveScrollPosition: boolean;\r\n    @Input() lockSwipeToPrev: boolean;\r\n    @Input() lockSwipes: boolean;\r\n    @Input() startHour: number;\r\n    @Input() endHour: number;\r\n    @Input() sliderOptions: any;\r\n    @Input() hourSegments: number;\r\n\r\n    @Output() onRangeChanged = new EventEmitter<IRange>();\r\n    @Output() onEventSelected = new EventEmitter<IEvent>();\r\n    @Output() onTimeSelected = new EventEmitter<ITimeSelected>();\r\n    @Output() onDayHeaderSelected = new EventEmitter<ITimeSelected>();\r\n    @Output() onTitleChanged = new EventEmitter<string>(true);\r\n\r\n    public views: IWeekView[] = [];\r\n    public currentViewIndex = 0;\r\n    public range: IRange;\r\n    public direction = 0;\r\n    public mode: CalendarMode = 'week';\r\n\r\n    private inited = false;\r\n    private callbackOnInit = true;\r\n    private currentDateChangedFromParentSubscription: Subscription;\r\n    private eventSourceChangedSubscription: Subscription;\r\n    private slideChangedSubscription: Subscription;\r\n    private slideUpdatedSubscription: Subscription;\r\n\r\n    public hourColumnLabels: string[];\r\n    public initScrollPosition: number;\r\n    private formatDayHeader: (date: Date) => string;\r\n    private formatTitle: (date: Date) => string;\r\n    private formatHourColumnLabel: (date: Date) => string;\r\n    private hourRange: number;\r\n\r\n    static createDateObjects(startTime: Date, startHour: number, endHour: number, timeInterval: number): IWeekViewRow[][] {\r\n        const times: IWeekViewRow[][] = [],\r\n            currentHour = 0,\r\n            currentDate = startTime.getDate();\r\n        let hourStep,\r\n            minStep;\r\n\r\n        if (timeInterval < 1) {\r\n            hourStep = Math.floor(1 / timeInterval);\r\n            minStep = 60;\r\n        } else {\r\n            hourStep = 1;\r\n            minStep = Math.floor(60 / timeInterval);\r\n        }\r\n\r\n        for (let hour = startHour; hour < endHour; hour += hourStep) {\r\n            for (let interval = 0; interval < 60; interval += minStep) {\r\n                const row: IWeekViewRow[] = [];\r\n                for (let day = 0; day < 7; day += 1) {\r\n                    const time = new Date(startTime.getTime());\r\n                    time.setHours(currentHour + hour, interval);\r\n                    time.setDate(currentDate + day);\r\n                    row.push({\r\n                        events: [],\r\n                        time\r\n                    });\r\n                }\r\n                times.push(row);\r\n            }\r\n        }\r\n        return times;\r\n    }\r\n\r\n    static getDates(startTime: Date, n: number): IWeekViewDateRow[] {\r\n        const dates = new Array(n),\r\n            current = new Date(startTime.getTime());\r\n        let i = 0;\r\n        while (i < n) {\r\n            dates[i++] = {\r\n                date: new Date(current.getTime()),\r\n                events: [],\r\n                dayHeader: ''\r\n            };\r\n            current.setDate(current.getDate() + 1);\r\n        }\r\n        return dates;\r\n    }\r\n\r\n    private static compareEventByStartOffset(eventA: IDisplayEvent, eventB: IDisplayEvent): number {\r\n        return eventA.startOffset - eventB.startOffset;\r\n    }\r\n\r\n    private static calculateWidth(orderedEvents: IDisplayEvent[], size: number, hourParts: number) {\r\n        const totalSize = size * hourParts,\r\n            cells = new Array(totalSize);\r\n\r\n        // sort by position in descending order, the right most columns should be calculated first\r\n        orderedEvents.sort((eventA, eventB) => {\r\n            return eventB.position - eventA.position;\r\n        });\r\n        for (let i = 0; i < totalSize; i += 1) {\r\n            cells[i] = {\r\n                calculated: false,\r\n                events: []\r\n            };\r\n        }\r\n        const len = orderedEvents.length;\r\n        for (let i = 0; i < len; i += 1) {\r\n            const event = orderedEvents[i];\r\n            let index = event.startIndex * hourParts + event.startOffset;\r\n            while (index < event.endIndex * hourParts - event.endOffset) {\r\n                cells[index].events.push(event);\r\n                index += 1;\r\n            }\r\n        }\r\n\r\n        let i = 0;\r\n        while (i < len) {\r\n            let event = orderedEvents[i];\r\n            if (!event.overlapNumber) {\r\n                const overlapNumber = event.position + 1;\r\n                event.overlapNumber = overlapNumber;\r\n                const eventQueue = [event];\r\n                while (event = eventQueue.shift()) {\r\n                    let index = event.startIndex * hourParts + event.startOffset;\r\n                    while (index < event.endIndex * hourParts - event.endOffset) {\r\n                        if (!cells[index].calculated) {\r\n                            cells[index].calculated = true;\r\n                            if (cells[index].events) {\r\n                                const eventCountInCell = cells[index].events.length;\r\n                                for (let j = 0; j < eventCountInCell; j += 1) {\r\n                                    const currentEventInCell = cells[index].events[j];\r\n                                    if (!currentEventInCell.overlapNumber) {\r\n                                        currentEventInCell.overlapNumber = overlapNumber;\r\n                                        eventQueue.push(currentEventInCell);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        index += 1;\r\n                    }\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.sliderOptions) {\r\n            this.sliderOptions = {};\r\n        }\r\n        this.sliderOptions.loop = true;\r\n\r\n        this.hourRange = (this.endHour - this.startHour) * this.hourSegments;\r\n        if (this.dateFormatter && this.dateFormatter.formatWeekViewDayHeader) {\r\n            this.formatDayHeader = this.dateFormatter.formatWeekViewDayHeader;\r\n        } else {\r\n            const datePipe = new DatePipe(this.locale);\r\n            this.formatDayHeader = function (date: Date) {\r\n                return datePipe.transform(date, this.formatWeekViewDayHeader);\r\n            };\r\n        }\r\n\r\n        if (this.dateFormatter && this.dateFormatter.formatWeekViewTitle) {\r\n            this.formatTitle = this.dateFormatter.formatWeekViewTitle;\r\n        } else {\r\n            const datePipe = new DatePipe(this.locale);\r\n            this.formatTitle = function (date: Date) {\r\n                return datePipe.transform(date, this.formatWeekTitle);\r\n            };\r\n        }\r\n\r\n        if (this.dateFormatter && this.dateFormatter.formatWeekViewHourColumn) {\r\n            this.formatHourColumnLabel = this.dateFormatter.formatWeekViewHourColumn;\r\n        } else {\r\n            const datePipe = new DatePipe(this.locale);\r\n            this.formatHourColumnLabel = function (date: Date) {\r\n                return datePipe.transform(date, this.formatHourColumn);\r\n            };\r\n        }\r\n\r\n        if (this.lockSwipeToPrev) {\r\n            this.slider.lockSwipeToPrev(true);\r\n        }\r\n\r\n        if (this.lockSwipes) {\r\n            this.slider.lockSwipes(true);\r\n        }\r\n\r\n        this.refreshView();\r\n        this.hourColumnLabels = this.getHourColumnLabels();\r\n        this.inited = true;\r\n\r\n        this.currentDateChangedFromParentSubscription = this.calendarService.currentDateChangedFromParent$.subscribe(currentDate => {\r\n            this.refreshView();\r\n        });\r\n\r\n        this.eventSourceChangedSubscription = this.calendarService.eventSourceChanged$.subscribe(() => {\r\n            this.onDataLoaded();\r\n        });\r\n\r\n        this.slideChangedSubscription = this.calendarService.slideChanged$.subscribe(direction => {\r\n            if (direction === 1) {\r\n                this.slider.slideNext();\r\n            } else if (direction === -1) {\r\n                this.slider.slidePrev();\r\n            }\r\n        });\r\n\r\n        this.slideUpdatedSubscription = this.calendarService.slideUpdated$.subscribe(() => {\r\n            this.slider.update();\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const title = this.getTitle();\r\n        this.onTitleChanged.emit(title);\r\n\r\n        if (this.scrollToHour > 0) {\r\n            const hourColumns = this.elm.nativeElement.querySelector('.weekview-normal-event-container').querySelectorAll('.calendar-hour-column');\r\n            const me = this;\r\n            setTimeout(() => {\r\n                me.initScrollPosition = hourColumns[me.scrollToHour - me.startHour].offsetTop;\r\n            }, 50);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (!this.inited) {\r\n            return;\r\n        }\r\n\r\n        if ((changes.startHour || changes.endHour) && (!changes.startHour.isFirstChange() || !changes.endHour.isFirstChange())) {\r\n            this.views = undefined;\r\n            this.hourRange = (this.endHour - this.startHour) * this.hourSegments;\r\n            this.direction = 0;\r\n            this.refreshView();\r\n            this.hourColumnLabels = this.getHourColumnLabels();\r\n        }\r\n\r\n        const eventSourceChange = changes.eventSource;\r\n        if (eventSourceChange && eventSourceChange.currentValue) {\r\n            this.onDataLoaded();\r\n        }\r\n\r\n        const lockSwipeToPrev = changes.lockSwipeToPrev;\r\n        if (lockSwipeToPrev) {\r\n            this.slider.lockSwipeToPrev(lockSwipeToPrev.currentValue);\r\n        }\r\n\r\n        const lockSwipes = changes.lockSwipes;\r\n        if (lockSwipes) {\r\n            this.slider.lockSwipes(lockSwipes.currentValue);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.currentDateChangedFromParentSubscription) {\r\n            this.currentDateChangedFromParentSubscription.unsubscribe();\r\n            this.currentDateChangedFromParentSubscription = null;\r\n        }\r\n\r\n        if (this.eventSourceChangedSubscription) {\r\n            this.eventSourceChangedSubscription.unsubscribe();\r\n            this.eventSourceChangedSubscription = null;\r\n        }\r\n\r\n        if (this.slideChangedSubscription) {\r\n            this.slideChangedSubscription.unsubscribe();\r\n            this.slideChangedSubscription = null;\r\n        }\r\n\r\n        if (this.slideUpdatedSubscription) {\r\n            this.slideUpdatedSubscription.unsubscribe();\r\n            this.slideUpdatedSubscription = null;\r\n        }\r\n    }\r\n\r\n    onSlideChanged() {\r\n        if (this.callbackOnInit) {\r\n            this.callbackOnInit = false;\r\n            return;\r\n        }\r\n\r\n        const currentViewIndex = this.currentViewIndex;\r\n        let direction = 0;\r\n\r\n        this.slider.getActiveIndex().then(currentSlideIndex => {\r\n            currentSlideIndex = (currentSlideIndex + 2) % 3;\r\n            if(isNaN(currentSlideIndex)) {\r\n                currentSlideIndex = currentViewIndex;\r\n            }\r\n\r\n            if (currentSlideIndex - currentViewIndex === 1) {\r\n                direction = 1;\r\n            } else if (currentSlideIndex === 0 && currentViewIndex === 2) {\r\n                direction = 1;\r\n                this.slider.slideTo(1, 0, false);\r\n            } else if (currentViewIndex - currentSlideIndex === 1) {\r\n                direction = -1;\r\n            } else if (currentSlideIndex === 2 && currentViewIndex === 0) {\r\n                direction = -1;\r\n                this.slider.slideTo(3, 0, false);\r\n            }\r\n            this.currentViewIndex = currentSlideIndex;\r\n            this.move(direction);\r\n        });\r\n    }\r\n\r\n    move(direction: number) {\r\n        if (direction === 0) {\r\n            return;\r\n        }\r\n        this.direction = direction;\r\n        const adjacent = this.calendarService.getAdjacentCalendarDate(this.mode, direction);\r\n        this.calendarService.setCurrentDate(adjacent);\r\n        this.refreshView();\r\n        this.direction = 0;\r\n    }\r\n\r\n    private getHourColumnLabels(): string[] {\r\n        const hourColumnLabels: string[] = [];\r\n        for (let hour = 0, length = this.views[0].rows.length; hour < length; hour += 1) {\r\n            // handle edge case for DST\r\n            if (hour === 0 && this.views[0].rows[hour][0].time.getHours() !== this.startHour) {\r\n                const time = new Date(this.views[0].rows[hour][0].time);\r\n                time.setDate(time.getDate() + 1);\r\n                time.setHours(this.startHour);\r\n                hourColumnLabels.push(this.formatHourColumnLabel(time));\r\n            } else {\r\n                hourColumnLabels.push(this.formatHourColumnLabel(this.views[0].rows[hour][0].time));\r\n            }\r\n        }\r\n        return hourColumnLabels;\r\n    }\r\n\r\n    getViewData(startTime: Date): IWeekView {\r\n        const dates = WeekViewComponent.getDates(startTime, 7);\r\n        for (let i = 0; i < 7; i++) {\r\n            dates[i].dayHeader = this.formatDayHeader(dates[i].date);\r\n        }\r\n\r\n        return {\r\n            rows: WeekViewComponent.createDateObjects(startTime, this.startHour, this.endHour, this.hourSegments),\r\n            dates\r\n        };\r\n    }\r\n\r\n    getRange(currentDate: Date): IRange {\r\n        const year = currentDate.getFullYear(),\r\n            month = currentDate.getMonth(),\r\n            date = currentDate.getDate(),\r\n            day = currentDate.getDay();\r\n        let difference = day - this.startingDayWeek;\r\n\r\n        if (difference < 0) {\r\n            difference += 7;\r\n        }\r\n\r\n        // set hour to 12 to avoid DST problem\r\n        const firstDayOfWeek = new Date(year, month, date - difference, 12, 0, 0),\r\n            endTime = new Date(year, month, date - difference + 7, 12, 0, 0);\r\n\r\n        return {\r\n            startTime: firstDayOfWeek,\r\n            endTime\r\n        };\r\n    }\r\n\r\n    onDataLoaded() {\r\n        const eventSource = this.eventSource,\r\n            len = eventSource ? eventSource.length : 0,\r\n            startTime = this.range.startTime,\r\n            endTime = this.range.endTime,\r\n            utcStartTime = Date.UTC(startTime.getFullYear(), startTime.getMonth(), startTime.getDate()),\r\n            utcEndTime = Date.UTC(endTime.getFullYear(), endTime.getMonth(), endTime.getDate()),\r\n            currentViewIndex = this.currentViewIndex,\r\n            rows = this.views[currentViewIndex].rows,\r\n            dates = this.views[currentViewIndex].dates,\r\n            oneHour = 3600000,\r\n            oneDay = 86400000,\r\n            // add allday eps\r\n            eps = 0.016,\r\n            rangeStartRowIndex = this.startHour * this.hourSegments,\r\n            rangeEndRowIndex = this.endHour * this.hourSegments,\r\n            allRows = 24 * this.hourSegments;\r\n        let allDayEventInRange = false,\r\n            normalEventInRange = false;\r\n\r\n        for (let i = 0; i < 7; i += 1) {\r\n            dates[i].events = [];\r\n            dates[i].hasEvent = false;\r\n        }\r\n\r\n        for (let day = 0; day < 7; day += 1) {\r\n            for (let hour = 0; hour < this.hourRange; hour += 1) {\r\n                rows[hour][day].events = [];\r\n            }\r\n        }\r\n        for (let i = 0; i < len; i += 1) {\r\n            const event = eventSource[i];\r\n            const eventStartTime = event.startTime;\r\n            const eventEndTime = event.endTime;\r\n\r\n            let eventUTCStartTime: number,\r\n                eventUTCEndTime: number;\r\n\r\n            if (event.allDay) {\r\n                eventUTCStartTime = eventStartTime.getTime();\r\n                eventUTCEndTime = eventEndTime.getTime();\r\n            } else {\r\n                eventUTCStartTime = Date.UTC(eventStartTime.getFullYear(), eventStartTime.getMonth(), eventStartTime.getDate());\r\n                eventUTCEndTime = Date.UTC(eventEndTime.getFullYear(), eventEndTime.getMonth(), eventEndTime.getDate() + 1);\r\n            }\r\n\r\n            if (eventUTCEndTime <= utcStartTime || eventUTCStartTime >= utcEndTime || eventStartTime >= eventEndTime) {\r\n                continue;\r\n            }\r\n\r\n            if (event.allDay) {\r\n                allDayEventInRange = true;\r\n\r\n                let allDayStartIndex: number;\r\n                if (eventUTCStartTime <= utcStartTime) {\r\n                    allDayStartIndex = 0;\r\n                } else {\r\n                    allDayStartIndex = Math.round((eventUTCStartTime - utcStartTime) / oneDay);\r\n                }\r\n\r\n                let allDayEndIndex: number;\r\n                if (eventUTCEndTime >= utcEndTime) {\r\n                    allDayEndIndex = Math.round((utcEndTime - utcStartTime) / oneDay);\r\n                } else {\r\n                    allDayEndIndex = Math.round((eventUTCEndTime - utcStartTime) / oneDay);\r\n                }\r\n\r\n                const displayAllDayEvent: IDisplayEvent = {\r\n                    event,\r\n                    startIndex: allDayStartIndex,\r\n                    endIndex: allDayEndIndex\r\n                };\r\n\r\n                let eventSet = dates[allDayStartIndex].events;\r\n                if (eventSet) {\r\n                    eventSet.push(displayAllDayEvent);\r\n                } else {\r\n                    eventSet = [];\r\n                    eventSet.push(displayAllDayEvent);\r\n                    dates[allDayStartIndex].events = eventSet;\r\n                }\r\n                dates[allDayStartIndex].hasEvent = true;\r\n            } else {\r\n                normalEventInRange = true;\r\n\r\n                let timeDifferenceStart: number;\r\n                if (eventUTCStartTime < utcStartTime) {\r\n                    timeDifferenceStart = 0;\r\n                } else {\r\n                    timeDifferenceStart = (eventUTCStartTime - utcStartTime) / oneHour * this.hourSegments + (eventStartTime.getHours() + eventStartTime.getMinutes() / 60) * this.hourSegments;\r\n                }\r\n\r\n                let timeDifferenceEnd: number;\r\n                if (eventUTCEndTime > utcEndTime) {\r\n                    timeDifferenceEnd = (utcEndTime - utcStartTime) / oneHour * this.hourSegments;\r\n                } else {\r\n                    timeDifferenceEnd = (eventUTCEndTime - oneDay - utcStartTime) / oneHour * this.hourSegments + (eventEndTime.getHours() + eventEndTime.getMinutes() / 60) * this.hourSegments;\r\n                }\r\n\r\n                const startIndex = Math.floor(timeDifferenceStart),\r\n                    endIndex = Math.ceil(timeDifferenceEnd - eps);\r\n                let startRowIndex = startIndex % allRows,\r\n                    dayIndex = Math.floor(startIndex / allRows),\r\n                    endOfDay = dayIndex * allRows,\r\n                    startOffset = 0,\r\n                    endOffset = 0;\r\n\r\n                if (this.hourParts !== 1) {\r\n                    if (startRowIndex < rangeStartRowIndex) {\r\n                        startOffset = 0;\r\n                    } else {\r\n                        startOffset = Math.floor((timeDifferenceStart - startIndex) * this.hourParts);\r\n                    }\r\n                }\r\n\r\n                do {\r\n                    endOfDay += allRows;\r\n                    let endRowIndex: number;\r\n                    if (endOfDay < endIndex) {\r\n                        endRowIndex = allRows;\r\n                    } else {\r\n                        if (endOfDay === endIndex) {\r\n                            endRowIndex = allRows;\r\n                        } else {\r\n                            endRowIndex = endIndex % allRows;\r\n                        }\r\n                        if (this.hourParts !== 1) {\r\n                            if (endRowIndex > rangeEndRowIndex) {\r\n                                endOffset = 0;\r\n                            } else {\r\n                                endOffset = Math.floor((endIndex - timeDifferenceEnd) * this.hourParts);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (startRowIndex < rangeStartRowIndex) {\r\n                        startRowIndex = 0;\r\n                    } else {\r\n                        startRowIndex -= rangeStartRowIndex;\r\n                    }\r\n                    if (endRowIndex > rangeEndRowIndex) {\r\n                        endRowIndex = rangeEndRowIndex;\r\n                    }\r\n                    endRowIndex -= rangeStartRowIndex;\r\n\r\n                    if (startRowIndex < endRowIndex) {\r\n                        const displayEvent = {\r\n                            event,\r\n                            startIndex: startRowIndex,\r\n                            endIndex: endRowIndex,\r\n                            startOffset,\r\n                            endOffset\r\n                        };\r\n                        let eventSet = rows[startRowIndex][dayIndex].events;\r\n                        if (eventSet) {\r\n                            eventSet.push(displayEvent);\r\n                        } else {\r\n                            eventSet = [];\r\n                            eventSet.push(displayEvent);\r\n                            rows[startRowIndex][dayIndex].events = eventSet;\r\n                        }\r\n                        dates[dayIndex].hasEvent = true;\r\n                    }\r\n                    startRowIndex = 0;\r\n                    startOffset = 0;\r\n                    dayIndex += 1;\r\n                } while (endOfDay < endIndex);\r\n            }\r\n        }\r\n\r\n        if (normalEventInRange) {\r\n            for (let day = 0; day < 7; day += 1) {\r\n                let orderedEvents: IDisplayEvent[] = [];\r\n                for (let hour = 0; hour < this.hourRange; hour += 1) {\r\n                    if (rows[hour][day].events) {\r\n                        rows[hour][day].events.sort(WeekViewComponent.compareEventByStartOffset);\r\n                        orderedEvents = orderedEvents.concat(rows[hour][day].events);\r\n                    }\r\n                }\r\n                if (orderedEvents.length > 0) {\r\n                    this.placeEvents(orderedEvents);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (allDayEventInRange) {\r\n            let orderedAllDayEvents: IDisplayEvent[] = [];\r\n            for (let day = 0; day < 7; day += 1) {\r\n                if (dates[day].events) {\r\n                    orderedAllDayEvents = orderedAllDayEvents.concat(dates[day].events);\r\n                }\r\n            }\r\n            if (orderedAllDayEvents.length > 0) {\r\n                this.placeAllDayEvents(orderedAllDayEvents);\r\n            }\r\n        }\r\n\r\n        if (this.autoSelect) {\r\n            let findSelected = false;\r\n            let selectedDate;\r\n            for (let r = 0; r < 7; r += 1) {\r\n                if (dates[r].selected) {\r\n                    selectedDate = dates[r];\r\n                    findSelected = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (findSelected) {\r\n                let disabled = false;\r\n                if (this.markDisabled) {\r\n                    disabled = this.markDisabled(selectedDate.date);\r\n                }\r\n\r\n                this.onTimeSelected.emit({\r\n                    selectedTime: selectedDate.date,\r\n                    events: selectedDate.events.map(e => e.event),\r\n                    disabled\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    refreshView() {\r\n        this.range = this.getRange(this.calendarService.currentDate);\r\n\r\n        if (this.inited) {\r\n            const title = this.getTitle();\r\n            this.onTitleChanged.emit(title);\r\n        }\r\n        this.calendarService.populateAdjacentViews(this);\r\n        this.updateCurrentView(this.range.startTime, this.views[this.currentViewIndex]);\r\n        this.calendarService.rangeChanged(this);\r\n    }\r\n\r\n    getTitle(): string {\r\n        const firstDayOfWeek = new Date(this.range.startTime.getTime());\r\n        firstDayOfWeek.setHours(12, 0, 0, 0);\r\n        return this.formatTitle(firstDayOfWeek);\r\n    }\r\n\r\n    getHighlightClass(date: IWeekViewDateRow): string {\r\n        let className = '';\r\n\r\n        if (date.hasEvent) {\r\n            if (className) {\r\n                className += ' ';\r\n            }\r\n            className = 'weekview-with-event';\r\n        }\r\n\r\n        if (date.selected) {\r\n            if (className) {\r\n                className += ' ';\r\n            }\r\n            className += 'weekview-selected';\r\n        }\r\n\r\n        if (date.current) {\r\n            if (className) {\r\n                className += ' ';\r\n            }\r\n            className += 'weekview-current';\r\n        }\r\n\r\n        return className;\r\n    }\r\n\r\n    select(selectedTime: Date, events: IDisplayEvent[]) {\r\n        let disabled = false;\r\n        if (this.markDisabled) {\r\n            disabled = this.markDisabled(selectedTime);\r\n        }\r\n\r\n        this.onTimeSelected.emit({\r\n            selectedTime,\r\n            events: events.map(e => e.event),\r\n            disabled\r\n        });\r\n    }\r\n\r\n    placeEvents(orderedEvents: IDisplayEvent[]) {\r\n        this.calculatePosition(orderedEvents);\r\n        WeekViewComponent.calculateWidth(orderedEvents, this.hourRange, this.hourParts);\r\n    }\r\n\r\n    placeAllDayEvents(orderedEvents: IDisplayEvent[]) {\r\n        this.calculatePosition(orderedEvents);\r\n    }\r\n\r\n    overlap(event1: IDisplayEvent, event2: IDisplayEvent): boolean {\r\n        let earlyEvent = event1,\r\n            lateEvent = event2;\r\n        if (event1.startIndex > event2.startIndex || (event1.startIndex === event2.startIndex && event1.startOffset > event2.startOffset)) {\r\n            earlyEvent = event2;\r\n            lateEvent = event1;\r\n        }\r\n\r\n        if (earlyEvent.endIndex <= lateEvent.startIndex) {\r\n            return false;\r\n        } else {\r\n            return !(earlyEvent.endIndex - lateEvent.startIndex === 1 && earlyEvent.endOffset + lateEvent.startOffset >= this.hourParts);\r\n        }\r\n    }\r\n\r\n    calculatePosition(events: IDisplayEvent[]) {\r\n        const len = events.length,\r\n            isForbidden = new Array(len);\r\n        let maxColumn = 0;\r\n\r\n        for (let i = 0; i < len; i += 1) {\r\n            let col: number;\r\n            for (col = 0; col < maxColumn; col += 1) {\r\n                isForbidden[col] = false;\r\n            }\r\n            for (let j = 0; j < i; j += 1) {\r\n                if (this.overlap(events[i], events[j])) {\r\n                    isForbidden[events[j].position] = true;\r\n                }\r\n            }\r\n            for (col = 0; col < maxColumn; col += 1) {\r\n                if (!isForbidden[col]) {\r\n                    break;\r\n                }\r\n            }\r\n            if (col < maxColumn) {\r\n                events[i].position = col;\r\n            } else {\r\n                events[i].position = maxColumn++;\r\n            }\r\n        }\r\n\r\n        if (this.dir === 'rtl') {\r\n            for (let i = 0; i < len; i += 1) {\r\n                events[i].position = maxColumn - 1 - events[i].position;\r\n            }\r\n        }\r\n    }\r\n\r\n    updateCurrentView(currentViewStartDate: Date, view: IWeekView) {\r\n        const currentCalendarDate = this.calendarService.currentDate,\r\n            today = new Date(),\r\n            oneDay = 86400000,\r\n            selectedDayDifference = Math.round((Date.UTC(currentCalendarDate.getFullYear(), currentCalendarDate.getMonth(), currentCalendarDate.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay),\r\n            currentDayDifference = Math.floor((Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay);\r\n\r\n        for (let r = 0; r < 7; r += 1) {\r\n            view.dates[r].selected = false;\r\n        }\r\n\r\n        if (selectedDayDifference >= 0 && selectedDayDifference < 7 && this.autoSelect) {\r\n            view.dates[selectedDayDifference].selected = true;\r\n        }\r\n\r\n        if (currentDayDifference >= 0 && currentDayDifference < 7) {\r\n            view.dates[currentDayDifference].current = true;\r\n        }\r\n    }\r\n\r\n    daySelected(viewDate: IWeekViewDateRow) {\r\n        const selectedDate = viewDate.date,\r\n            dates = this.views[this.currentViewIndex].dates,\r\n            currentViewStartDate = this.range.startTime,\r\n            oneDay = 86400000,\r\n            selectedDayDifference = Math.round((Date.UTC(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay);\r\n\r\n        this.calendarService.setCurrentDate(selectedDate);\r\n\r\n        for (let r = 0; r < 7; r += 1) {\r\n            dates[r].selected = false;\r\n        }\r\n\r\n        if (selectedDayDifference >= 0 && selectedDayDifference < 7) {\r\n            dates[selectedDayDifference].selected = true;\r\n        }\r\n\r\n        let disabled = false;\r\n        if (this.markDisabled) {\r\n            disabled = this.markDisabled(selectedDate);\r\n        }\r\n\r\n        this.onDayHeaderSelected.emit({selectedTime: selectedDate, events: viewDate.events.map(e => e.event), disabled});\r\n    }\r\n\r\n    setScrollPosition(scrollPosition: number) {\r\n        this.initScrollPosition = scrollPosition;\r\n    }\r\n}\r\n","import {DatePipe} from '@angular/common';\r\nimport {IonSlides} from '@ionic/angular';\r\nimport {\r\n    Component,\r\n    OnInit,\r\n    OnChanges,\r\n    HostBinding,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    TemplateRef,\r\n    ElementRef,\r\n    AfterViewInit, OnDestroy\r\n} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {\r\n    ICalendarComponent,\r\n    IDayView,\r\n    IDayViewRow,\r\n    IDisplayEvent,\r\n    IEvent,\r\n    ITimeSelected,\r\n    IRange,\r\n    CalendarMode,\r\n    IDateFormatter\r\n} from './calendar';\r\nimport {CalendarService} from './calendar.service';\r\nimport {IDisplayAllDayEvent, IDayViewAllDayEventSectionTemplateContext, IDayViewNormalEventSectionTemplateContext} from './calendar';\r\n\r\n@Component({\r\n    selector: 'dayview',\r\n    template: `\r\n        <ion-slides #daySlider [options]=\"sliderOptions\" [dir]=\"dir\" (ionSlideDidChange)=\"onSlideChanged()\" class=\"slides-container\">\r\n            <ion-slide class=\"slide-container\">\r\n                <div class=\"dayview-allday-table\">\r\n                    <div class=\"dayview-allday-label\">{{allDayLabel}}</div>\r\n                    <div class=\"dayview-allday-content-wrapper scroll-content\">\r\n                        <table class=\"table table-bordered dayview-allday-content-table\">\r\n                            <tbody>\r\n                            <tr>\r\n                                <td class=\"calendar-cell\" [ngClass]=\"{'calendar-event-wrap':views[0].allDayEvents.length>0}\"\r\n                                    [ngStyle]=\"{height: 25*views[0].allDayEvents.length+'px'}\"\r\n                                    *ngIf=\"0===currentViewIndex\">\r\n                                    <ng-template [ngTemplateOutlet]=\"dayviewAllDayEventSectionTemplate\"\r\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[0].allDayEvents,eventTemplate:dayviewAllDayEventTemplate}\">\r\n                                    </ng-template>\r\n                                </td>\r\n                                <td class=\"calendar-cell\" *ngIf=\"0!==currentViewIndex\">\r\n                                    <ng-template [ngTemplateOutlet]=\"dayviewInactiveAllDayEventSectionTemplate\"\r\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[0].allDayEvents}\">\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <init-position-scroll *ngIf=\"0===currentViewIndex\" class=\"dayview-normal-event-container\"\r\n                                      [initPosition]=\"initScrollPosition\" [emitEvent]=\"preserveScrollPosition\"\r\n                                      (onScroll)=\"setScrollPosition($event)\">\r\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\r\n                        <tbody>\r\n                        <tr *ngFor=\"let tm of views[0].rows; let i = index\">\r\n                            <td class=\"calendar-hour-column text-center\">\r\n                                {{hourColumnLabels[i]}}\r\n                            </td>\r\n                            <td class=\"calendar-cell\" tappable (click)=\"select(tm.time, tm.events)\">\r\n                                <ng-template [ngTemplateOutlet]=\"dayviewNormalEventSectionTemplate\"\r\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:dayviewNormalEventTemplate}\">\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </init-position-scroll>\r\n                <init-position-scroll *ngIf=\"0!==currentViewIndex\" class=\"dayview-normal-event-container\"\r\n                                      [initPosition]=\"initScrollPosition\">\r\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\r\n                        <tbody>\r\n                        <tr *ngFor=\"let tm of views[0].rows; let i = index\">\r\n                            <td class=\"calendar-hour-column text-center\">\r\n                                {{hourColumnLabels[i]}}\r\n                            </td>\r\n                            <td class=\"calendar-cell\">\r\n                                <ng-template [ngTemplateOutlet]=\"dayviewInactiveNormalEventSectionTemplate\"\r\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </init-position-scroll>\r\n            </ion-slide>\r\n            <ion-slide class=\"slide-container\">\r\n                <div class=\"dayview-allday-table\">\r\n                    <div class=\"dayview-allday-label\">{{allDayLabel}}</div>\r\n                    <div class=\"dayview-allday-content-wrapper scroll-content\">\r\n                        <table class=\"table table-bordered dayview-allday-content-table\">\r\n                            <tbody>\r\n                            <tr>\r\n                                <td class=\"calendar-cell\" [ngClass]=\"{'calendar-event-wrap':views[1].allDayEvents.length>0}\"\r\n                                    [ngStyle]=\"{height: 25*views[1].allDayEvents.length+'px'}\"\r\n                                    *ngIf=\"1===currentViewIndex\">\r\n                                    <ng-template [ngTemplateOutlet]=\"dayviewAllDayEventSectionTemplate\"\r\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[1].allDayEvents,eventTemplate:dayviewAllDayEventTemplate}\">\r\n                                    </ng-template>\r\n                                </td>\r\n                                <td class=\"calendar-cell\" *ngIf=\"1!==currentViewIndex\">\r\n                                    <ng-template [ngTemplateOutlet]=\"dayviewInactiveAllDayEventSectionTemplate\"\r\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[1].allDayEvents}\">\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <init-position-scroll *ngIf=\"1===currentViewIndex\" class=\"dayview-normal-event-container\"\r\n                                      [initPosition]=\"initScrollPosition\" [emitEvent]=\"preserveScrollPosition\"\r\n                                      (onScroll)=\"setScrollPosition($event)\">\r\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\r\n                        <tbody>\r\n                        <tr *ngFor=\"let tm of views[1].rows; let i = index\">\r\n                            <td class=\"calendar-hour-column text-center\">\r\n                                {{hourColumnLabels[i]}}\r\n                            </td>\r\n                            <td class=\"calendar-cell\" tappable (click)=\"select(tm.time, tm.events)\">\r\n                                <ng-template [ngTemplateOutlet]=\"dayviewNormalEventSectionTemplate\"\r\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:dayviewNormalEventTemplate}\">\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </init-position-scroll>\r\n                <init-position-scroll *ngIf=\"1!==currentViewIndex\" class=\"dayview-normal-event-container\"\r\n                                      [initPosition]=\"initScrollPosition\">\r\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\r\n                        <tbody>\r\n                        <tr *ngFor=\"let tm of views[1].rows; let i = index\">\r\n                            <td class=\"calendar-hour-column text-center\">\r\n                                {{hourColumnLabels[i]}}\r\n                            </td>\r\n                            <td class=\"calendar-cell\">\r\n                                <ng-template [ngTemplateOutlet]=\"dayviewInactiveNormalEventSectionTemplate\"\r\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </init-position-scroll>\r\n            </ion-slide>\r\n            <ion-slide class=\"slide-container\">\r\n                <div class=\"dayview-allday-table\">\r\n                    <div class=\"dayview-allday-label\">{{allDayLabel}}</div>\r\n                    <div class=\"dayview-allday-content-wrapper scroll-content\">\r\n                        <table class=\"table table-bordered dayview-allday-content-table\">\r\n                            <tbody>\r\n                            <tr>\r\n                                <td class=\"calendar-cell\" [ngClass]=\"{'calendar-event-wrap':views[2].allDayEvents.length>0}\"\r\n                                    [ngStyle]=\"{height: 25*views[2].allDayEvents.length+'px'}\"\r\n                                    *ngIf=\"2===currentViewIndex\">\r\n                                    <ng-template [ngTemplateOutlet]=\"dayviewAllDayEventSectionTemplate\"\r\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[2].allDayEvents,eventTemplate:dayviewAllDayEventTemplate}\">\r\n                                    </ng-template>\r\n                                </td>\r\n                                <td class=\"calendar-cell\" *ngIf=\"2!==currentViewIndex\">\r\n                                    <ng-template [ngTemplateOutlet]=\"dayviewInactiveAllDayEventSectionTemplate\"\r\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[2].allDayEvents}\">\r\n                                    </ng-template>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <init-position-scroll *ngIf=\"2===currentViewIndex\" class=\"dayview-normal-event-container\"\r\n                                      [initPosition]=\"initScrollPosition\" [emitEvent]=\"preserveScrollPosition\"\r\n                                      (onScroll)=\"setScrollPosition($event)\">\r\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\r\n                        <tbody>\r\n                        <tr *ngFor=\"let tm of views[2].rows; let i = index\">\r\n                            <td class=\"calendar-hour-column text-center\">\r\n                                {{hourColumnLabels[i]}}\r\n                            </td>\r\n                            <td class=\"calendar-cell\" tappable (click)=\"select(tm.time, tm.events)\">\r\n                                <ng-template [ngTemplateOutlet]=\"dayviewNormalEventSectionTemplate\"\r\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:dayviewNormalEventTemplate}\">\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </init-position-scroll>\r\n                <init-position-scroll *ngIf=\"2!==currentViewIndex\" class=\"dayview-normal-event-container\"\r\n                                      [initPosition]=\"initScrollPosition\">\r\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\r\n                        <tbody>\r\n                        <tr *ngFor=\"let tm of views[2].rows; let i = index\">\r\n                            <td class=\"calendar-hour-column text-center\">\r\n                                {{hourColumnLabels[i]}}\r\n                            </td>\r\n                            <td class=\"calendar-cell\">\r\n                                <ng-template [ngTemplateOutlet]=\"dayviewInactiveNormalEventSectionTemplate\"\r\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </init-position-scroll>\r\n            </ion-slide>\r\n        </ion-slides>\r\n    `,\r\n    styles: [`\r\n        .table-fixed {\r\n            table-layout: fixed;\r\n        }\r\n\r\n        .table {\r\n            width: 100%;\r\n            max-width: 100%;\r\n            background-color: transparent;\r\n        }\r\n\r\n        .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td,\r\n        .table > tbody > tr > td, .table > tfoot > tr > td {\r\n            padding: 8px;\r\n            line-height: 20px;\r\n            vertical-align: top;\r\n        }\r\n\r\n        .table > thead > tr > th {\r\n            vertical-align: bottom;\r\n            border-bottom: 2px solid #ddd;\r\n        }\r\n\r\n        .table > thead:first-child > tr:first-child > th, .table > thead:first-child > tr:first-child > td {\r\n            border-top: 0\r\n        }\r\n\r\n        .table > tbody + tbody {\r\n            border-top: 2px solid #ddd;\r\n        }\r\n\r\n        .table-bordered {\r\n            border: 1px solid #ddd;\r\n        }\r\n\r\n        .table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th,\r\n        .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {\r\n            border: 1px solid #ddd;\r\n        }\r\n\r\n        .table-bordered > thead > tr > th, .table-bordered > thead > tr > td {\r\n            border-bottom-width: 2px;\r\n        }\r\n\r\n        .table-striped > tbody > tr:nth-child(odd) > td, .table-striped > tbody > tr:nth-child(odd) > th {\r\n            background-color: #f9f9f9\r\n        }\r\n\r\n        .calendar-hour-column {\r\n            width: 50px;\r\n            white-space: nowrap;\r\n        }\r\n\r\n        .calendar-event-wrap {\r\n            position: relative;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n\r\n        .calendar-event {\r\n            position: absolute;\r\n            padding: 2px;\r\n            cursor: pointer;\r\n            z-index: 10000;\r\n        }\r\n\r\n        .slides-container {\r\n            height: 100%;\r\n        }\r\n\r\n        .slide-container {\r\n            display: block;\r\n        }\r\n\r\n        .calendar-cell {\r\n            padding: 0 !important;\r\n            height: 37px;\r\n        }\r\n\r\n        .dayview-allday-label {\r\n            float: left;\r\n            height: 100%;\r\n            line-height: 50px;\r\n            text-align: center;\r\n            width: 50px;\r\n            border-left: 1px solid #ddd;\r\n        }\r\n\r\n        [dir=\"rtl\"] .dayview-allday-label {\r\n            border-right: 1px solid #ddd;\r\n            float: right;\r\n        }\r\n\r\n        .dayview-allday-content-wrapper {\r\n            margin-left: 50px;\r\n            overflow: hidden;\r\n            height: 51px;\r\n        }\r\n\r\n        [dir=\"rtl\"] .dayview-allday-content-wrapper {\r\n            margin-left: 0;\r\n            margin-right: 50px;\r\n        }\r\n\r\n        .dayview-allday-content-table {\r\n            min-height: 50px;\r\n        }\r\n\r\n        .dayview-allday-content-table td {\r\n            border-left: 1px solid #ddd;\r\n            border-right: 1px solid #ddd;\r\n        }\r\n\r\n        .dayview-allday-table {\r\n            height: 50px;\r\n            position: relative;\r\n            border-bottom: 1px solid #ddd;\r\n            font-size: 14px;\r\n        }\r\n\r\n        .dayview-normal-event-container {\r\n            margin-top: 50px;\r\n            overflow: hidden;\r\n            left: 0;\r\n            right: 0;\r\n            top: 0;\r\n            bottom: 0;\r\n            position: absolute;\r\n            font-size: 14px;\r\n        }\r\n\r\n        .scroll-content {\r\n            overflow-y: auto;\r\n            overflow-x: hidden;\r\n        }\r\n\r\n        ::-webkit-scrollbar,\r\n        *::-webkit-scrollbar {\r\n            display: none;\r\n        }\r\n\r\n        .table > tbody > tr > td.calendar-hour-column {\r\n            padding-left: 0;\r\n            padding-right: 0;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        @media (max-width: 750px) {\r\n            .dayview-allday-label, .calendar-hour-column {\r\n                width: 31px;\r\n                font-size: 12px;\r\n            }\r\n\r\n            .dayview-allday-label {\r\n                padding-top: 4px;\r\n            }\r\n\r\n            .table > tbody > tr > td.calendar-hour-column {\r\n                padding-left: 0;\r\n                padding-right: 0;\r\n                vertical-align: middle;\r\n                line-height: 12px;\r\n            }\r\n\r\n            .dayview-allday-label {\r\n                line-height: 20px;\r\n            }\r\n\r\n            .dayview-allday-content-wrapper {\r\n                margin-left: 31px;\r\n            }\r\n\r\n            [dir=\"rtl\"] .dayview-allday-content-wrapper {\r\n                margin-left: 0;\r\n                margin-right: 31px;\r\n            }\r\n        }\r\n    `],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DayViewComponent implements ICalendarComponent, OnInit, OnChanges, OnDestroy, AfterViewInit {\r\n\r\n    constructor(private calendarService: CalendarService, private elm: ElementRef) {\r\n    }\r\n\r\n    @ViewChild('daySlider', {static: true}) slider: IonSlides;\r\n    @HostBinding('class.dayview') class = true;\r\n\r\n    @Input() dayviewAllDayEventTemplate: TemplateRef<IDisplayAllDayEvent>;\r\n    @Input() dayviewNormalEventTemplate: TemplateRef<IDisplayEvent>;\r\n    @Input() dayviewAllDayEventSectionTemplate: TemplateRef<IDayViewAllDayEventSectionTemplateContext>;\r\n    @Input() dayviewNormalEventSectionTemplate: TemplateRef<IDayViewNormalEventSectionTemplateContext>;\r\n    @Input() dayviewInactiveAllDayEventSectionTemplate: TemplateRef<IDayViewAllDayEventSectionTemplateContext>;\r\n    @Input() dayviewInactiveNormalEventSectionTemplate: TemplateRef<IDayViewNormalEventSectionTemplateContext>;\r\n\r\n    @Input() formatHourColumn: string;\r\n    @Input() formatDayTitle: string;\r\n    @Input() allDayLabel: string;\r\n    @Input() hourParts: number;\r\n    @Input() eventSource: IEvent[];\r\n    @Input() markDisabled: (date: Date) => boolean;\r\n    @Input() locale: string;\r\n    @Input() dateFormatter: IDateFormatter;\r\n    @Input() dir = '';\r\n    @Input() scrollToHour = 0;\r\n    @Input() preserveScrollPosition: boolean;\r\n    @Input() lockSwipeToPrev: boolean;\r\n    @Input() lockSwipes: boolean;\r\n    @Input() startHour: number;\r\n    @Input() endHour: number;\r\n    @Input() sliderOptions: any;\r\n    @Input() hourSegments: number;\r\n\r\n    @Output() onRangeChanged = new EventEmitter<IRange>();\r\n    @Output() onEventSelected = new EventEmitter<IEvent>();\r\n    @Output() onTimeSelected = new EventEmitter<ITimeSelected>();\r\n    @Output() onTitleChanged = new EventEmitter<string>(true);\r\n\r\n    public views: IDayView[] = [];\r\n    public currentViewIndex = 0;\r\n    public direction = 0;\r\n    public mode: CalendarMode = 'day';\r\n    public range: IRange;\r\n\r\n    private inited = false;\r\n    private callbackOnInit = true;\r\n    private currentDateChangedFromParentSubscription: Subscription;\r\n    private eventSourceChangedSubscription: Subscription;\r\n    private slideChangedSubscription: Subscription;\r\n    private slideUpdatedSubscription: Subscription;\r\n\r\n    public hourColumnLabels: string[];\r\n    public initScrollPosition: number;\r\n    private formatTitle: (date: Date) => string;\r\n    private formatHourColumnLabel: (date: Date) => string;\r\n    private hourRange: number;\r\n\r\n    static createDateObjects(startTime: Date, startHour: number, endHour: number, timeInterval: number): IDayViewRow[] {\r\n        const rows: IDayViewRow[] = [],\r\n            currentHour = 0,\r\n            currentDate = startTime.getDate();\r\n        let time: Date,\r\n            hourStep,\r\n            minStep;\r\n\r\n        if (timeInterval < 1) {\r\n            hourStep = Math.floor(1 / timeInterval);\r\n            minStep = 60;\r\n        } else {\r\n            hourStep = 1;\r\n            minStep = Math.floor(60 / timeInterval);\r\n        }\r\n\r\n        for (let hour = startHour; hour < endHour; hour += hourStep) {\r\n            for (let interval = 0; interval < 60; interval += minStep) {\r\n                time = new Date(startTime.getTime());\r\n                time.setHours(currentHour + hour, interval);\r\n                time.setDate(currentDate);\r\n                rows.push({\r\n                    time,\r\n                    events: []\r\n                });\r\n            }\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    private static compareEventByStartOffset(eventA: IDisplayEvent, eventB: IDisplayEvent) {\r\n        return eventA.startOffset - eventB.startOffset;\r\n    }\r\n\r\n    private static calculateWidth(orderedEvents: IDisplayEvent[], size: number, hourParts: number) {\r\n        const totalSize = size * hourParts,\r\n            cells: { calculated: boolean; events: IDisplayEvent[]; }[] = new Array(totalSize);\r\n\r\n        // sort by position in descending order, the right most columns should be calculated first\r\n        orderedEvents.sort((eventA, eventB) => {\r\n            return eventB.position - eventA.position;\r\n        });\r\n        for (let i = 0; i < totalSize; i += 1) {\r\n            cells[i] = {\r\n                calculated: false,\r\n                events: []\r\n            };\r\n        }\r\n        const len = orderedEvents.length;\r\n        for (let i = 0; i < len; i += 1) {\r\n            const event = orderedEvents[i];\r\n            let index = event.startIndex * hourParts + event.startOffset;\r\n            while (index < event.endIndex * hourParts - event.endOffset) {\r\n                cells[index].events.push(event);\r\n                index += 1;\r\n            }\r\n        }\r\n\r\n        let i = 0;\r\n        while (i < len) {\r\n            let event = orderedEvents[i];\r\n            if (!event.overlapNumber) {\r\n                const overlapNumber = event.position + 1;\r\n                event.overlapNumber = overlapNumber;\r\n                const eventQueue = [event];\r\n                while (event = eventQueue.shift()) {\r\n                    let index = event.startIndex * hourParts + event.startOffset;\r\n                    while (index < event.endIndex * hourParts - event.endOffset) {\r\n                        if (!cells[index].calculated) {\r\n                            cells[index].calculated = true;\r\n                            if (cells[index].events) {\r\n                                const eventCountInCell = cells[index].events.length;\r\n                                for (let j = 0; j < eventCountInCell; j += 1) {\r\n                                    const currentEventInCell = cells[index].events[j];\r\n                                    if (!currentEventInCell.overlapNumber) {\r\n                                        currentEventInCell.overlapNumber = overlapNumber;\r\n                                        eventQueue.push(currentEventInCell);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        index += 1;\r\n                    }\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.sliderOptions) {\r\n            this.sliderOptions = {};\r\n        }\r\n        this.sliderOptions.loop = true;\r\n\r\n        this.hourRange = (this.endHour - this.startHour) * this.hourSegments;\r\n        if (this.dateFormatter && this.dateFormatter.formatDayViewTitle) {\r\n            this.formatTitle = this.dateFormatter.formatDayViewTitle;\r\n        } else {\r\n            const datePipe = new DatePipe(this.locale);\r\n            this.formatTitle = function(date: Date) {\r\n                return datePipe.transform(date, this.formatDayTitle);\r\n            };\r\n        }\r\n\r\n        if (this.dateFormatter && this.dateFormatter.formatDayViewHourColumn) {\r\n            this.formatHourColumnLabel = this.dateFormatter.formatDayViewHourColumn;\r\n        } else {\r\n            const datePipe = new DatePipe(this.locale);\r\n            this.formatHourColumnLabel = function(date: Date) {\r\n                return datePipe.transform(date, this.formatHourColumn);\r\n            };\r\n        }\r\n\r\n        if (this.lockSwipeToPrev) {\r\n            this.slider.lockSwipeToPrev(true);\r\n        }\r\n\r\n        if (this.lockSwipes) {\r\n            this.slider.lockSwipes(true);\r\n        }\r\n\r\n        this.refreshView();\r\n        this.hourColumnLabels = this.getHourColumnLabels();\r\n\r\n        this.inited = true;\r\n\r\n        this.currentDateChangedFromParentSubscription = this.calendarService.currentDateChangedFromParent$.subscribe(currentDate => {\r\n            this.refreshView();\r\n        });\r\n\r\n        this.eventSourceChangedSubscription = this.calendarService.eventSourceChanged$.subscribe(() => {\r\n            this.onDataLoaded();\r\n        });\r\n\r\n        this.slideChangedSubscription = this.calendarService.slideChanged$.subscribe(direction => {\r\n            if (direction === 1) {\r\n                this.slider.slideNext();\r\n            } else if (direction === -1) {\r\n                this.slider.slidePrev();\r\n            }\r\n        });\r\n\r\n        this.slideUpdatedSubscription = this.calendarService.slideUpdated$.subscribe(() => {\r\n            this.slider.update();\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const title = this.getTitle();\r\n        this.onTitleChanged.emit(title);\r\n\r\n        if (this.scrollToHour > 0) {\r\n            const hourColumns = this.elm.nativeElement.querySelector('.dayview-normal-event-container').querySelectorAll('.calendar-hour-column');\r\n            const me = this;\r\n            setTimeout(() => {\r\n                me.initScrollPosition = hourColumns[me.scrollToHour - me.startHour].offsetTop;\r\n            }, 50);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (!this.inited) {\r\n            return;\r\n        }\r\n        if ((changes.startHour || changes.endHour) && (!changes.startHour.isFirstChange() || !changes.endHour.isFirstChange())) {\r\n            this.views = undefined;\r\n            this.hourRange = (this.endHour - this.startHour) * this.hourSegments;\r\n            this.direction = 0;\r\n            this.refreshView();\r\n            this.hourColumnLabels = this.getHourColumnLabels();\r\n        }\r\n\r\n        const eventSourceChange = changes.eventSource;\r\n        if (eventSourceChange && eventSourceChange.currentValue) {\r\n            this.onDataLoaded();\r\n        }\r\n\r\n        const lockSwipeToPrev = changes.lockSwipeToPrev;\r\n        if (lockSwipeToPrev) {\r\n            this.slider.lockSwipeToPrev(lockSwipeToPrev.currentValue);\r\n        }\r\n\r\n        const lockSwipes = changes.lockSwipes;\r\n        if (lockSwipes) {\r\n            this.slider.lockSwipes(lockSwipes.currentValue);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.currentDateChangedFromParentSubscription) {\r\n            this.currentDateChangedFromParentSubscription.unsubscribe();\r\n            this.currentDateChangedFromParentSubscription = null;\r\n        }\r\n\r\n        if (this.eventSourceChangedSubscription) {\r\n            this.eventSourceChangedSubscription.unsubscribe();\r\n            this.eventSourceChangedSubscription = null;\r\n        }\r\n\r\n        if (this.slideChangedSubscription) {\r\n            this.slideChangedSubscription.unsubscribe();\r\n            this.slideChangedSubscription = null;\r\n        }\r\n\r\n        if (this.slideUpdatedSubscription) {\r\n            this.slideUpdatedSubscription.unsubscribe();\r\n            this.slideUpdatedSubscription = null;\r\n        }\r\n    }\r\n\r\n    onSlideChanged() {\r\n        if (this.callbackOnInit) {\r\n            this.callbackOnInit = false;\r\n            return;\r\n        }\r\n\r\n        let direction = 0;\r\n        const currentViewIndex = this.currentViewIndex;\r\n\r\n        this.slider.getActiveIndex().then((currentSlideIndex) => {\r\n            currentSlideIndex = (currentSlideIndex + 2) % 3;\r\n            if(isNaN(currentSlideIndex)) {\r\n                currentSlideIndex = currentViewIndex;\r\n            }\r\n\r\n            if (currentSlideIndex - currentViewIndex === 1) {\r\n                direction = 1;\r\n            } else if (currentSlideIndex === 0 && currentViewIndex === 2) {\r\n                direction = 1;\r\n                this.slider.slideTo(1, 0, false);\r\n            } else if (currentViewIndex - currentSlideIndex === 1) {\r\n                direction = -1;\r\n            } else if (currentSlideIndex === 2 && currentViewIndex === 0) {\r\n                direction = -1;\r\n                this.slider.slideTo(3, 0, false);\r\n            }\r\n            this.currentViewIndex = currentSlideIndex;\r\n            this.move(direction);\r\n        });\r\n    }\r\n\r\n    move(direction: number) {\r\n        if (direction === 0) {\r\n            return;\r\n        }\r\n\r\n        this.direction = direction;\r\n        const adjacentDate = this.calendarService.getAdjacentCalendarDate(this.mode, direction);\r\n        this.calendarService.setCurrentDate(adjacentDate);\r\n        this.refreshView();\r\n        this.direction = 0;\r\n    }\r\n\r\n    private getHourColumnLabels(): string[] {\r\n        const hourColumnLabels: string[] = [];\r\n        for (let hour = 0, length = this.views[0].rows.length; hour < length; hour += 1) {\r\n            // handle edge case for DST\r\n            if (hour === 0 && this.views[0].rows[hour].time.getHours() !== this.startHour) {\r\n                const time = new Date(this.views[0].rows[hour].time);\r\n                time.setDate(time.getDate() + 1);\r\n                time.setHours(this.startHour);\r\n                hourColumnLabels.push(this.formatHourColumnLabel(time));\r\n            } else {\r\n                hourColumnLabels.push(this.formatHourColumnLabel(this.views[0].rows[hour].time));\r\n            }\r\n        }\r\n        return hourColumnLabels;\r\n    }\r\n\r\n    getViewData(startTime: Date): IDayView {\r\n        return {\r\n            rows: DayViewComponent.createDateObjects(startTime, this.startHour, this.endHour, this.hourSegments),\r\n            allDayEvents: []\r\n        };\r\n    }\r\n\r\n    getRange(currentDate: Date): IRange {\r\n        const year = currentDate.getFullYear(),\r\n            month = currentDate.getMonth(),\r\n            date = currentDate.getDate(),\r\n            startTime = new Date(year, month, date, 12, 0, 0),\r\n            endTime = new Date(year, month, date + 1, 12, 0, 0);\r\n\r\n        return {\r\n            startTime,\r\n            endTime\r\n        };\r\n    }\r\n\r\n    onDataLoaded() {\r\n        const eventSource = this.eventSource,\r\n            len = eventSource ? eventSource.length : 0,\r\n            startTime = this.range.startTime,\r\n            endTime = this.range.endTime,\r\n            utcStartTime = Date.UTC(startTime.getFullYear(), startTime.getMonth(), startTime.getDate()),\r\n            utcEndTime = Date.UTC(endTime.getFullYear(), endTime.getMonth(), endTime.getDate()),\r\n            currentViewIndex = this.currentViewIndex,\r\n            rows = this.views[currentViewIndex].rows,\r\n            allDayEvents: IDisplayAllDayEvent[] = this.views[currentViewIndex].allDayEvents = [],\r\n            oneHour = 3600000,\r\n            eps = 0.016,\r\n            rangeStartRowIndex = this.startHour * this.hourSegments,\r\n            rangeEndRowIndex = this.endHour * this.hourSegments;\r\n        let normalEventInRange = false;\r\n\r\n        for (let hour = 0; hour < this.hourRange; hour += 1) {\r\n            rows[hour].events = [];\r\n        }\r\n\r\n        for (let i = 0; i < len; i += 1) {\r\n            const event = eventSource[i];\r\n            const eventStartTime = event.startTime;\r\n            const eventEndTime = event.endTime;\r\n            let eventUTCStartTime: number,\r\n                eventUTCEndTime: number;\r\n\r\n            if (event.allDay) {\r\n                eventUTCStartTime = eventStartTime.getTime();\r\n                eventUTCEndTime = eventEndTime.getTime();\r\n            } else {\r\n                eventUTCStartTime = Date.UTC(eventStartTime.getFullYear(), eventStartTime.getMonth(), eventStartTime.getDate());\r\n                eventUTCEndTime = Date.UTC(eventEndTime.getFullYear(), eventEndTime.getMonth(), eventEndTime.getDate() + 1);\r\n            }\r\n\r\n            if (eventUTCEndTime <= utcStartTime || eventUTCStartTime >= utcEndTime || eventStartTime >= eventEndTime) {\r\n                continue;\r\n            }\r\n\r\n            if (event.allDay) {\r\n                allDayEvents.push({\r\n                    event\r\n                });\r\n            } else {\r\n                normalEventInRange = true;\r\n\r\n                let timeDifferenceStart: number;\r\n                if (eventUTCStartTime < utcStartTime) {\r\n                    timeDifferenceStart = 0;\r\n                } else {\r\n                    timeDifferenceStart = (eventStartTime.getHours() + eventStartTime.getMinutes() / 60) * this.hourSegments;\r\n                }\r\n\r\n                let timeDifferenceEnd: number;\r\n                if (eventUTCEndTime > utcEndTime) {\r\n                    timeDifferenceEnd = (utcEndTime - utcStartTime) / oneHour * this.hourSegments;\r\n                } else {\r\n                    timeDifferenceEnd = (eventEndTime.getHours() + eventEndTime.getMinutes() / 60) * this.hourSegments;\r\n                }\r\n\r\n                let startIndex = Math.floor(timeDifferenceStart);\r\n                let endIndex = Math.ceil(timeDifferenceEnd - eps);\r\n                let startOffset = 0;\r\n                let endOffset = 0;\r\n                if (this.hourParts !== 1) {\r\n                    if (startIndex < rangeStartRowIndex) {\r\n                        startOffset = 0;\r\n                    } else {\r\n                        startOffset = Math.floor((timeDifferenceStart - startIndex) * this.hourParts);\r\n                    }\r\n                    if (endIndex > rangeEndRowIndex) {\r\n                        endOffset = 0;\r\n                    } else {\r\n                        endOffset = Math.floor((endIndex - timeDifferenceEnd) * this.hourParts);\r\n                    }\r\n                }\r\n\r\n                if (startIndex < rangeStartRowIndex) {\r\n                    startIndex = 0;\r\n                } else {\r\n                    startIndex -= rangeStartRowIndex;\r\n                }\r\n                if (endIndex > rangeEndRowIndex) {\r\n                    endIndex = rangeEndRowIndex;\r\n                }\r\n                endIndex -= rangeStartRowIndex;\r\n\r\n                if (startIndex < endIndex) {\r\n                    const displayEvent = {\r\n                        event,\r\n                        startIndex,\r\n                        endIndex,\r\n                        startOffset,\r\n                        endOffset\r\n                    };\r\n\r\n                    let eventSet = rows[startIndex].events;\r\n                    if (eventSet) {\r\n                        eventSet.push(displayEvent);\r\n                    } else {\r\n                        eventSet = [];\r\n                        eventSet.push(displayEvent);\r\n                        rows[startIndex].events = eventSet;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (normalEventInRange) {\r\n            let orderedEvents: IDisplayEvent[] = [];\r\n            for (let hour = 0; hour < this.hourRange; hour += 1) {\r\n                if (rows[hour].events) {\r\n                    rows[hour].events.sort(DayViewComponent.compareEventByStartOffset);\r\n\r\n                    orderedEvents = orderedEvents.concat(rows[hour].events);\r\n                }\r\n            }\r\n            if (orderedEvents.length > 0) {\r\n                this.placeEvents(orderedEvents);\r\n            }\r\n        }\r\n    }\r\n\r\n    refreshView() {\r\n        this.range = this.getRange(this.calendarService.currentDate);\r\n        if (this.inited) {\r\n            const title = this.getTitle();\r\n            this.onTitleChanged.emit(title);\r\n        }\r\n\r\n        this.calendarService.populateAdjacentViews(this);\r\n        this.calendarService.rangeChanged(this);\r\n    }\r\n\r\n    getTitle(): string {\r\n        const startingDate = new Date(this.range.startTime.getTime());\r\n        startingDate.setHours(12, 0, 0, 0);\r\n        return this.formatTitle(startingDate);\r\n    }\r\n\r\n    select(selectedTime: Date, events: IDisplayEvent[]) {\r\n        let disabled = false;\r\n        if (this.markDisabled) {\r\n            disabled = this.markDisabled(selectedTime);\r\n        }\r\n\r\n        this.onTimeSelected.emit({\r\n            selectedTime,\r\n            events: events.map(e => e.event),\r\n            disabled\r\n        });\r\n    }\r\n\r\n    placeEvents(orderedEvents: IDisplayEvent[]) {\r\n        this.calculatePosition(orderedEvents);\r\n        DayViewComponent.calculateWidth(orderedEvents, this.hourRange, this.hourParts);\r\n    }\r\n\r\n    placeAllDayEvents(orderedEvents: IDisplayEvent[]) {\r\n        this.calculatePosition(orderedEvents);\r\n    }\r\n\r\n    overlap(event1: IDisplayEvent, event2: IDisplayEvent): boolean {\r\n        let earlyEvent = event1,\r\n            lateEvent = event2;\r\n        if (event1.startIndex > event2.startIndex || (event1.startIndex === event2.startIndex && event1.startOffset > event2.startOffset)) {\r\n            earlyEvent = event2;\r\n            lateEvent = event1;\r\n        }\r\n\r\n        if (earlyEvent.endIndex <= lateEvent.startIndex) {\r\n            return false;\r\n        } else {\r\n            return !(earlyEvent.endIndex - lateEvent.startIndex === 1 && earlyEvent.endOffset + lateEvent.startOffset >= this.hourParts);\r\n        }\r\n    }\r\n\r\n    calculatePosition(events: IDisplayEvent[]) {\r\n        const len = events.length,\r\n            isForbidden: boolean[] = new Array(len);\r\n        let maxColumn = 0,\r\n            col: number;\r\n\r\n\r\n        for (let i = 0; i < len; i += 1) {\r\n            for (col = 0; col < maxColumn; col += 1) {\r\n                isForbidden[col] = false;\r\n            }\r\n            for (let j = 0; j < i; j += 1) {\r\n                if (this.overlap(events[i], events[j])) {\r\n                    isForbidden[events[j].position] = true;\r\n                }\r\n            }\r\n            for (col = 0; col < maxColumn; col += 1) {\r\n                if (!isForbidden[col]) {\r\n                    break;\r\n                }\r\n            }\r\n            if (col < maxColumn) {\r\n                events[i].position = col;\r\n            } else {\r\n                events[i].position = maxColumn++;\r\n            }\r\n        }\r\n\r\n        if (this.dir === 'rtl') {\r\n            for (let i = 0; i < len; i += 1) {\r\n                events[i].position = maxColumn - 1 - events[i].position;\r\n            }\r\n        }\r\n    }\r\n\r\n    eventSelected(event: IEvent) {\r\n        this.onEventSelected.emit(event);\r\n    }\r\n\r\n    setScrollPosition(scrollPosition: number) {\r\n        this.initScrollPosition = scrollPosition;\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef, Inject, LOCALE_ID } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { CalendarService } from './calendar.service';\r\n\r\nexport interface IEvent {\r\n    allDay: boolean;\r\n    endTime: Date;\r\n    startTime: Date;\r\n    title: string;\r\n}\r\n\r\nexport interface IRange {\r\n    startTime: Date;\r\n    endTime: Date;\r\n}\r\n\r\nexport interface IView {\r\n}\r\n\r\nexport interface IDayView extends IView {\r\n    allDayEvents: IDisplayAllDayEvent[];\r\n    rows: IDayViewRow[];\r\n}\r\n\r\nexport interface IDayViewRow {\r\n    events: IDisplayEvent[];\r\n    time: Date;\r\n}\r\n\r\nexport interface IMonthView extends IView {\r\n    dates: IMonthViewRow[];\r\n    dayHeaders: string[];\r\n}\r\n\r\nexport interface IMonthViewRow {\r\n    current?: boolean;\r\n    date: Date;\r\n    events: IEvent[];\r\n    hasEvent?: boolean;\r\n    label: string;\r\n    secondary: boolean;\r\n    selected?: boolean;\r\n    disabled: boolean;\r\n}\r\n\r\nexport interface IWeekView extends IView {\r\n    dates: IWeekViewDateRow[];\r\n    rows: IWeekViewRow[][];\r\n}\r\n\r\nexport interface IWeekViewDateRow {\r\n    current?: boolean;\r\n    date: Date;\r\n    events: IDisplayEvent[];\r\n    hasEvent?: boolean;\r\n    selected?: boolean;\r\n    dayHeader: string;\r\n}\r\n\r\nexport interface IWeekViewRow {\r\n    events: IDisplayEvent[];\r\n    time: Date;\r\n}\r\n\r\nexport interface IDisplayEvent {\r\n    endIndex: number;\r\n    endOffset?: number;\r\n    event: IEvent;\r\n    startIndex: number;\r\n    startOffset?: number;\r\n    overlapNumber?: number;\r\n    position?: number;\r\n}\r\n\r\nexport interface IDisplayWeekViewHeader {\r\n    viewDate: IWeekViewDateRow;\r\n}\r\n\r\nexport interface IDisplayAllDayEvent {\r\n    event: IEvent;\r\n}\r\n\r\nexport interface ICalendarComponent {\r\n    currentViewIndex: number;\r\n    direction: number;\r\n    eventSource: IEvent[];\r\n    getRange: { (date:Date): IRange; };\r\n    getViewData: { (date:Date): IView };\r\n    mode: CalendarMode;\r\n    range: IRange;\r\n    views: IView[];\r\n    onDataLoaded: { (): void };\r\n    onRangeChanged: EventEmitter<IRange>;\r\n}\r\n\r\nexport interface ITimeSelected {\r\n    events: IEvent[];\r\n    selectedTime: Date;\r\n    disabled: boolean;\r\n}\r\n\r\nexport interface IMonthViewDisplayEventTemplateContext {\r\n    view: IView;\r\n    row: number;\r\n    col: number;\r\n}\r\n\r\nexport interface IMonthViewEventDetailTemplateContext {\r\n    selectedDate: ITimeSelected;\r\n    noEventsLabel: string;\r\n}\r\n\r\nexport interface IWeekViewAllDayEventSectionTemplateContext {\r\n    day: IWeekViewDateRow,\r\n    eventTemplate: TemplateRef<IDisplayAllDayEvent>\r\n}\r\n\r\nexport interface IWeekViewNormalEventSectionTemplateContext {\r\n    tm: IWeekViewRow,\r\n    eventTemplate: TemplateRef<IDisplayEvent>\r\n}\r\n\r\nexport interface IDayViewAllDayEventSectionTemplateContext {\r\n    alldayEvents: IDisplayAllDayEvent[],\r\n    eventTemplate: TemplateRef<IDisplayAllDayEvent>\r\n}\r\n\r\nexport interface IDayViewNormalEventSectionTemplateContext {\r\n    tm: IDayViewRow,\r\n    eventTemplate: TemplateRef<IDisplayEvent>\r\n}\r\n\r\nexport interface IDateFormatter {\r\n    formatMonthViewDay?: { (date:Date): string; };\r\n    formatMonthViewDayHeader?: { (date:Date): string; };\r\n    formatMonthViewTitle?: { (date:Date): string; };\r\n    formatWeekViewDayHeader?: { (date:Date): string; };\r\n    formatWeekViewTitle?: { (date:Date): string; };\r\n    formatWeekViewHourColumn?: { (date:Date): string; };\r\n    formatDayViewTitle?: { (date:Date): string; };\r\n    formatDayViewHourColumn?: { (date:Date): string; };\r\n}\r\n\r\nexport type CalendarMode = 'day' | 'month' | 'week';\r\n\r\nexport type QueryMode = 'local' | 'remote';\r\n\r\nexport enum Step {\r\n    QuarterHour = 15,\r\n    HalfHour = 30,\r\n    Hour = 60\r\n}\r\n\r\n@Component({\r\n    selector: 'calendar',\r\n    template: `\r\n        <ng-template #monthviewDefaultDisplayEventTemplate let-view=\"view\" let-row=\"row\" let-col=\"col\">\r\n            {{view.dates[row*7+col].label}}\r\n        </ng-template>\r\n        <ng-template #monthviewDefaultEventDetailTemplate let-showEventDetail=\"showEventDetail\" let-selectedDate=\"selectedDate\" let-noEventsLabel=\"noEventsLabel\">\r\n            <ion-list class=\"event-detail-container\" has-bouncing=\"false\" *ngIf=\"showEventDetail\" overflow-scroll=\"false\">\r\n                <ion-item *ngFor=\"let event of selectedDate?.events\" (click)=\"eventSelected(event)\">\r\n                        <span *ngIf=\"!event.allDay\" class=\"monthview-eventdetail-timecolumn\">{{event.startTime|date: 'HH:mm'}}\r\n                            -\r\n                            {{event.endTime|date: 'HH:mm'}}\r\n                        </span>\r\n                    <span *ngIf=\"event.allDay\" class=\"monthview-eventdetail-timecolumn\">{{allDayLabel}}</span>\r\n                    <span class=\"event-detail\">  |  {{event.title}}</span>\r\n                </ion-item>\r\n                <ion-item *ngIf=\"selectedDate?.events.length==0\">\r\n                    <div class=\"no-events-label\">{{noEventsLabel}}</div>\r\n                </ion-item>\r\n            </ion-list>\r\n        </ng-template>\r\n        <ng-template #defaultWeekviewHeaderTemplate let-viewDate=\"viewDate\">\r\n            {{ viewDate.dayHeader }}\r\n        </ng-template>\r\n        <ng-template #defaultAllDayEventTemplate let-displayEvent=\"displayEvent\">\r\n            <div class=\"calendar-event-inner\">{{displayEvent.event.title}}</div>\r\n        </ng-template>\r\n        <ng-template #defaultNormalEventTemplate let-displayEvent=\"displayEvent\">\r\n            <div class=\"calendar-event-inner\">{{displayEvent.event.title}}</div>\r\n        </ng-template>\r\n        <ng-template #defaultWeekViewAllDayEventSectionTemplate let-day=\"day\" let-eventTemplate=\"eventTemplate\">\r\n            <div [ngClass]=\"{'calendar-event-wrap': day.events}\" *ngIf=\"day.events\"\r\n                 [ngStyle]=\"{height: 25*day.events.length+'px'}\">\r\n                <div *ngFor=\"let displayEvent of day.events\" class=\"calendar-event\" tappable\r\n                     (click)=\"eventSelected(displayEvent.event)\"\r\n                     [ngStyle]=\"{top: 25*displayEvent.position+'px', width: 100*(displayEvent.endIndex-displayEvent.startIndex)+'%', height: '25px'}\">\r\n                    <ng-template [ngTemplateOutlet]=\"eventTemplate\"\r\n                                 [ngTemplateOutletContext]=\"{displayEvent:displayEvent}\">\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template #defaultDayViewAllDayEventSectionTemplate let-allDayEvents=\"allDayEvents\" let-eventTemplate=\"eventTemplate\">\r\n            <div *ngFor=\"let displayEvent of allDayEvents; let eventIndex=index\"\r\n                 class=\"calendar-event\" tappable\r\n                 (click)=\"eventSelected(displayEvent.event)\"\r\n                 [ngStyle]=\"{top: 25*eventIndex+'px',width: '100%',height:'25px'}\">\r\n                <ng-template [ngTemplateOutlet]=\"eventTemplate\"\r\n                             [ngTemplateOutletContext]=\"{displayEvent:displayEvent}\">\r\n                </ng-template>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template #defaultNormalEventSectionTemplate let-tm=\"tm\" let-hourParts=\"hourParts\" let-eventTemplate=\"eventTemplate\">\r\n            <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\r\n                <div *ngFor=\"let displayEvent of tm.events\" class=\"calendar-event\" tappable\r\n                     (click)=\"eventSelected(displayEvent.event)\"\r\n                     [ngStyle]=\"{top: (37*displayEvent.startOffset/hourParts)+'px',left: 100/displayEvent.overlapNumber*displayEvent.position+'%', width: 100/displayEvent.overlapNumber+'%', height: 37*(displayEvent.endIndex -displayEvent.startIndex - (displayEvent.endOffset + displayEvent.startOffset)/hourParts)+'px'}\">\r\n                    <ng-template [ngTemplateOutlet]=\"eventTemplate\"\r\n                                 [ngTemplateOutletContext]=\"{displayEvent:displayEvent}\">\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template #defaultInactiveAllDayEventSectionTemplate>\r\n        </ng-template>\r\n        <ng-template #defaultInactiveNormalEventSectionTemplate>\r\n        </ng-template>\r\n\r\n        <div [ngSwitch]=\"calendarMode\" class=\"{{calendarMode}}view-container\">\r\n            <monthview *ngSwitchCase=\"'month'\"\r\n                [formatDay]=\"formatDay\"\r\n                [formatDayHeader]=\"formatDayHeader\"\r\n                [formatMonthTitle]=\"formatMonthTitle\"\r\n                [startingDayMonth]=\"startingDayMonth\"\r\n                [showEventDetail]=\"showEventDetail\"\r\n                [noEventsLabel]=\"noEventsLabel\"\r\n                [autoSelect]=\"autoSelect\"\r\n                [eventSource]=\"eventSource\"\r\n                [markDisabled]=\"markDisabled\"\r\n                [monthviewDisplayEventTemplate]=\"monthviewDisplayEventTemplate||monthviewDefaultDisplayEventTemplate\"\r\n                [monthviewInactiveDisplayEventTemplate]=\"monthviewInactiveDisplayEventTemplate||monthviewDefaultDisplayEventTemplate\"\r\n                [monthviewEventDetailTemplate]=\"monthviewEventDetailTemplate||monthviewDefaultEventDetailTemplate\"\r\n                [locale]=\"locale\"\r\n                [dateFormatter]=\"dateFormatter\"\r\n                [dir]=\"dir\"\r\n                [lockSwipeToPrev]=\"lockSwipeToPrev\"\r\n                [lockSwipes]=\"lockSwipes\"\r\n                [sliderOptions]=\"sliderOptions\"\r\n                (onRangeChanged)=\"rangeChanged($event)\"\r\n                (onEventSelected)=\"eventSelected($event)\"\r\n                (onTimeSelected)=\"timeSelected($event)\"\r\n                (onTitleChanged)=\"titleChanged($event)\">\r\n            </monthview>\r\n            <weekview *ngSwitchCase=\"'week'\"\r\n                [formatWeekTitle]=\"formatWeekTitle\"\r\n                [formatWeekViewDayHeader]=\"formatWeekViewDayHeader\"\r\n                [formatHourColumn]=\"formatHourColumn\"\r\n                [startingDayWeek]=\"startingDayWeek\"\r\n                [allDayLabel]=\"allDayLabel\"\r\n                [hourParts]=\"hourParts\"\r\n                [autoSelect]=\"autoSelect\"\r\n                [hourSegments]=\"hourSegments\"\r\n                [eventSource]=\"eventSource\"\r\n                [markDisabled]=\"markDisabled\"\r\n                [weekviewHeaderTemplate]=\"weekviewHeaderTemplate||defaultWeekviewHeaderTemplate\"\r\n                [weekviewAllDayEventTemplate]=\"weekviewAllDayEventTemplate||defaultAllDayEventTemplate\"\r\n                [weekviewNormalEventTemplate]=\"weekviewNormalEventTemplate||defaultNormalEventTemplate\"\r\n                [weekviewAllDayEventSectionTemplate]=\"weekviewAllDayEventSectionTemplate||defaultWeekViewAllDayEventSectionTemplate\"\r\n                [weekviewNormalEventSectionTemplate]=\"weekviewNormalEventSectionTemplate||defaultNormalEventSectionTemplate\"\r\n                [weekviewInactiveAllDayEventSectionTemplate]=\"weekviewInactiveAllDayEventSectionTemplate||defaultInactiveAllDayEventSectionTemplate\"\r\n                [weekviewInactiveNormalEventSectionTemplate]=\"weekviewInactiveNormalEventSectionTemplate||defaultInactiveNormalEventSectionTemplate\"\r\n                [locale]=\"locale\"\r\n                [dateFormatter]=\"dateFormatter\"\r\n                [dir]=\"dir\"\r\n                [scrollToHour]=\"scrollToHour\"\r\n                [preserveScrollPosition]=\"preserveScrollPosition\"\r\n                [lockSwipeToPrev]=\"lockSwipeToPrev\"\r\n                [lockSwipes]=\"lockSwipes\"\r\n                [startHour]=\"startHour\"\r\n                [endHour]=\"endHour\"\r\n                [sliderOptions]=\"sliderOptions\"\r\n                (onRangeChanged)=\"rangeChanged($event)\"\r\n                (onEventSelected)=\"eventSelected($event)\"\r\n                (onDayHeaderSelected)=\"daySelected($event)\"\r\n                (onTimeSelected)=\"timeSelected($event)\"\r\n                (onTitleChanged)=\"titleChanged($event)\">\r\n            </weekview>\r\n            <dayview *ngSwitchCase=\"'day'\"\r\n                [formatDayTitle]=\"formatDayTitle\"\r\n                [formatHourColumn]=\"formatHourColumn\"\r\n                [allDayLabel]=\"allDayLabel\"\r\n                [hourParts]=\"hourParts\"\r\n                [hourSegments]=\"hourSegments\"\r\n                [eventSource]=\"eventSource\"\r\n                [markDisabled]=\"markDisabled\"\r\n                [dayviewAllDayEventTemplate]=\"dayviewAllDayEventTemplate||defaultAllDayEventTemplate\"\r\n                [dayviewNormalEventTemplate]=\"dayviewNormalEventTemplate||defaultNormalEventTemplate\"\r\n                [dayviewAllDayEventSectionTemplate]=\"dayviewAllDayEventSectionTemplate||defaultDayViewAllDayEventSectionTemplate\"\r\n                [dayviewNormalEventSectionTemplate]=\"dayviewNormalEventSectionTemplate||defaultNormalEventSectionTemplate\"\r\n                [dayviewInactiveAllDayEventSectionTemplate]=\"dayviewInactiveAllDayEventSectionTemplate||defaultInactiveAllDayEventSectionTemplate\"\r\n                [dayviewInactiveNormalEventSectionTemplate]=\"dayviewInactiveNormalEventSectionTemplate||defaultInactiveNormalEventSectionTemplate\"\r\n                [locale]=\"locale\"\r\n                [dateFormatter]=\"dateFormatter\"\r\n                [dir]=\"dir\"\r\n                [scrollToHour]=\"scrollToHour\"\r\n                [preserveScrollPosition]=\"preserveScrollPosition\"\r\n                [lockSwipeToPrev]=\"lockSwipeToPrev\"\r\n                [lockSwipes]=\"lockSwipes\"\r\n                [startHour]=\"startHour\"\r\n                [endHour]=\"endHour\"\r\n                [sliderOptions]=\"sliderOptions\"\r\n                (onRangeChanged)=\"rangeChanged($event)\"\r\n                (onEventSelected)=\"eventSelected($event)\"\r\n                (onTimeSelected)=\"timeSelected($event)\"\r\n                (onTitleChanged)=\"titleChanged($event)\">\r\n            </dayview>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        :host > div { height: 100%; }\r\n\r\n        .event-detail-container {\r\n          border-top: 2px darkgrey solid;\r\n        }\r\n\r\n        .no-events-label {\r\n          font-weight: bold;\r\n          color: darkgrey;\r\n          text-align: center;\r\n        }\r\n\r\n        .event-detail {\r\n          cursor: pointer;\r\n          white-space: nowrap;\r\n          text-overflow: ellipsis;\r\n        }\r\n\r\n        .monthview-eventdetail-timecolumn {\r\n          width: 110px;\r\n          overflow: hidden;\r\n        }\r\n\r\n        .calendar-event-inner {\r\n          overflow: hidden;\r\n          background-color: #3a87ad;\r\n          color: white;\r\n          height: 100%;\r\n          width: 100%;\r\n          padding: 2px;\r\n          line-height: 15px;\r\n          text-align: initial;\r\n        }\r\n\r\n        @media (max-width: 750px) {\r\n          .calendar-event-inner {\r\n            font-size: 12px;\r\n          }\r\n        }\r\n    `],\r\n    providers: [CalendarService]\r\n})\r\nexport class CalendarComponent implements OnInit {\r\n    @Input()\r\n    get currentDate():Date {\r\n        return this._currentDate;\r\n    }\r\n\r\n    set currentDate(val:Date) {\r\n        if (!val) {\r\n            val = new Date();\r\n        }\r\n\r\n        this._currentDate = val;\r\n        this.calendarService.setCurrentDate(val, true);\r\n        this.onCurrentDateChanged.emit(this._currentDate);\r\n    }\r\n\r\n    @Input() eventSource:IEvent[] = [];\r\n    @Input() calendarMode:CalendarMode = 'month';\r\n    @Input() formatDay:string = 'd';\r\n    @Input() formatDayHeader:string = 'EEE';\r\n    @Input() formatDayTitle:string = 'MMMM dd, yyyy';\r\n    @Input() formatWeekTitle:string = 'MMMM yyyy, \\'Week\\' w';\r\n    @Input() formatMonthTitle:string = 'MMMM yyyy';\r\n    @Input() formatWeekViewDayHeader:string = 'EEE d';\r\n    @Input() formatHourColumn:string = 'ha';\r\n    @Input() showEventDetail:boolean = true;\r\n    @Input() startingDayMonth:number = 0;\r\n    @Input() startingDayWeek:number = 0;\r\n    @Input() allDayLabel:string = 'all day';\r\n    @Input() noEventsLabel:string = 'No Events';\r\n    @Input() queryMode:QueryMode = 'local';\r\n    @Input() step:Step = Step.Hour;\r\n    @Input() timeInterval:number = 60;\r\n    @Input() autoSelect:boolean = true;\r\n    @Input() markDisabled:(date:Date) => boolean;\r\n    @Input() monthviewDisplayEventTemplate:TemplateRef<IMonthViewDisplayEventTemplateContext>;\r\n    @Input() monthviewInactiveDisplayEventTemplate:TemplateRef<IMonthViewDisplayEventTemplateContext>;\r\n    @Input() monthviewEventDetailTemplate:TemplateRef<IMonthViewEventDetailTemplateContext>;\r\n    @Input() weekviewHeaderTemplate:TemplateRef<IDisplayWeekViewHeader>;\r\n    @Input() weekviewAllDayEventTemplate:TemplateRef<IDisplayAllDayEvent>;\r\n    @Input() weekviewNormalEventTemplate:TemplateRef<IDisplayEvent>;\r\n    @Input() dayviewAllDayEventTemplate:TemplateRef<IDisplayAllDayEvent>;\r\n    @Input() dayviewNormalEventTemplate:TemplateRef<IDisplayEvent>;\r\n    @Input() weekviewAllDayEventSectionTemplate:TemplateRef<IWeekViewAllDayEventSectionTemplateContext>;\r\n    @Input() weekviewNormalEventSectionTemplate:TemplateRef<IWeekViewNormalEventSectionTemplateContext>;\r\n    @Input() dayviewAllDayEventSectionTemplate:TemplateRef<IDayViewAllDayEventSectionTemplateContext>;\r\n    @Input() dayviewNormalEventSectionTemplate:TemplateRef<IDayViewNormalEventSectionTemplateContext>;\r\n    @Input() weekviewInactiveAllDayEventSectionTemplate:TemplateRef<IWeekViewAllDayEventSectionTemplateContext>;\r\n    @Input() weekviewInactiveNormalEventSectionTemplate:TemplateRef<IWeekViewNormalEventSectionTemplateContext>;\r\n    @Input() dayviewInactiveAllDayEventSectionTemplate:TemplateRef<IDayViewAllDayEventSectionTemplateContext>;\r\n    @Input() dayviewInactiveNormalEventSectionTemplate:TemplateRef<IDayViewNormalEventSectionTemplateContext>;\r\n    @Input() dateFormatter:IDateFormatter;\r\n    @Input() dir:string = \"\";\r\n    @Input() scrollToHour:number = 0;\r\n    @Input() preserveScrollPosition:boolean = false;\r\n    @Input() lockSwipeToPrev:boolean = false;\r\n    @Input() lockSwipes:boolean = false;\r\n    @Input() locale:string = \"\";\r\n    @Input() startHour:number = 0;\r\n    @Input() endHour:number = 24;\r\n    @Input() sliderOptions:any;\r\n\r\n    @Output() onCurrentDateChanged = new EventEmitter<Date>();\r\n    @Output() onRangeChanged = new EventEmitter<IRange>();\r\n    @Output() onEventSelected = new EventEmitter<IEvent>();\r\n    @Output() onTimeSelected = new EventEmitter<ITimeSelected>();\r\n    @Output() onDayHeaderSelected = new EventEmitter<ITimeSelected>();\r\n    @Output() onTitleChanged = new EventEmitter<string>();\r\n\r\n    private _currentDate:Date;\r\n    public hourParts = 1;\r\n    public hourSegments = 1;\r\n    private currentDateChangedFromChildrenSubscription:Subscription;\r\n\r\n    constructor(private calendarService:CalendarService, @Inject(LOCALE_ID) private appLocale:string) {\r\n        this.locale = appLocale;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.autoSelect) {\r\n            if (this.autoSelect.toString() === 'false') {\r\n                this.autoSelect = false;\r\n            } else {\r\n                this.autoSelect = true;\r\n            }\r\n        }\r\n        this.hourSegments = 60 / this.timeInterval;\r\n        this.hourParts = 60 / this.step;\r\n        if(this.hourParts <= this.hourSegments) {\r\n            this.hourParts = 1;\r\n        } else {\r\n            this.hourParts = this.hourParts / this.hourSegments;\r\n        }\r\n        this.startHour = parseInt(this.startHour.toString());\r\n        this.endHour = parseInt(this.endHour.toString());\r\n        this.calendarService.queryMode = this.queryMode;\r\n\r\n        this.currentDateChangedFromChildrenSubscription = this.calendarService.currentDateChangedFromChildren$.subscribe(currentDate => {\r\n            this._currentDate = currentDate;\r\n            this.onCurrentDateChanged.emit(currentDate);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.currentDateChangedFromChildrenSubscription) {\r\n            this.currentDateChangedFromChildrenSubscription.unsubscribe();\r\n            this.currentDateChangedFromChildrenSubscription = null;\r\n        }\r\n    }\r\n\r\n    rangeChanged(range:IRange) {\r\n        this.onRangeChanged.emit(range);\r\n    }\r\n\r\n    eventSelected(event:IEvent) {\r\n        this.onEventSelected.emit(event);\r\n    }\r\n\r\n    timeSelected(timeSelected:ITimeSelected) {\r\n        this.onTimeSelected.emit(timeSelected);\r\n    }\r\n\r\n    daySelected(daySelected:ITimeSelected) {\r\n        this.onDayHeaderSelected.emit(daySelected);\r\n    }\r\n\r\n    titleChanged(title:string) {\r\n        this.onTitleChanged.emit(title);\r\n    }\r\n\r\n    loadEvents() {\r\n        this.calendarService.loadEvents();\r\n    }\r\n\r\n    slideNext() {\r\n        this.calendarService.slide(1);\r\n    }\r\n\r\n    slidePrev() {\r\n        this.calendarService.slide(-1);\r\n    }\r\n\r\n    update() {\r\n        this.calendarService.update();\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ElementRef,\r\n    SimpleChanges,\r\n    OnChanges,\r\n    AfterViewInit,\r\n    OnDestroy,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'init-position-scroll',\r\n    template: `\r\n        <div class=\"scroll-content\" style=\"height:100%\">\r\n            <ng-content></ng-content>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .scroll-content {\r\n            overflow-y: auto;\r\n            overflow-x: hidden;\r\n        }        \r\n    `],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class initPositionScrollComponent implements OnChanges, AfterViewInit, OnDestroy {\r\n    @Input() initPosition:number;\r\n    @Input() emitEvent:boolean;\r\n    @Output() onScroll = new EventEmitter<number>();\r\n\r\n    private element:ElementRef;\r\n    private scrollContent:HTMLElement;\r\n    private handler:()=>void;\r\n    private listenerAttached:boolean = false;\r\n\r\n    constructor(el:ElementRef) {\r\n        this.element = el;\r\n    }\r\n\r\n    ngOnChanges(changes:SimpleChanges) {\r\n        let initPosition = changes['initPosition'];\r\n        if (initPosition && initPosition.currentValue !== undefined && this.scrollContent) {\r\n            const me =this;\r\n            setTimeout(function() {\r\n                me.scrollContent.scrollTop = initPosition.currentValue;\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const scrollContent = this.scrollContent = this.element.nativeElement.querySelector('.scroll-content');\r\n        if (this.initPosition !== undefined) {\r\n            scrollContent.scrollTop = this.initPosition;\r\n        }\r\n\r\n        if (this.emitEvent && !this.listenerAttached) {\r\n            let onScroll = this.onScroll;\r\n            this.handler = function () {\r\n                onScroll.emit(scrollContent.scrollTop);\r\n            };\r\n            this.listenerAttached = true;\r\n            scrollContent.addEventListener('scroll', this.handler);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.listenerAttached) {\r\n            this.scrollContent.removeEventListener('scroll', this.handler);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { MonthViewComponent } from './monthview';\r\nimport { WeekViewComponent } from './weekview';\r\nimport { DayViewComponent } from './dayview';\r\nimport { CalendarComponent } from './calendar';\r\nimport { initPositionScrollComponent } from './init-position-scroll';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        MonthViewComponent, WeekViewComponent, DayViewComponent, CalendarComponent, initPositionScrollComponent\r\n    ],\r\n    imports: [IonicModule, CommonModule],\r\n    exports: [CalendarComponent]\r\n})\r\nexport class NgCalendarModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {CalendarService as ɵb} from './calendar.service';\nexport {DayViewComponent as ɵd} from './dayview';\nexport {initPositionScrollComponent as ɵe} from './init-position-scroll';\nexport {MonthViewComponent as ɵa} from './monthview';\nexport {WeekViewComponent as ɵc} from './weekview';"],"names":[],"mappings":"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"}